[2020-09-23T18:16:56.041] [DEBUG] main - false 'ssl-certs' '/home/cups/blockchain-explorer/ssl-certs'
[2020-09-23T18:16:56.847] [DEBUG] Platform - ******* Initialization started for hyperledger fabric platform ******
[2020-09-23T18:16:56.847] [DEBUG] Platform - ******* Initialization started for hyperledger fabric platform ******, { kafka_default:
   { name: 'kafka_default',
     profile: './connection-profile/connection.json' } }
[2020-09-23T18:16:56.847] [DEBUG] Platform - Setting admin organization enrolment files
[2020-09-23T18:16:56.847] [INFO] Platform -  network_config.id  kafka_default  network_config.profile  ./connection-profile/connection.json
[2020-09-23T18:16:56.847] [DEBUG] Platform - Creating network client [kafka_default] >>  { name: 'kafka_default',
  profile: './connection-profile/connection.json' }
[2020-09-23T18:16:56.848] [DEBUG] User - User : cups
[2020-09-23T18:16:56.930] [DEBUG] FabricUtils - ************ Initializing fabric client for [kafka_default]************
[2020-09-23T18:16:56.931] [DEBUG] FabricClient - Client configuration [kafka_default]  ...
[2020-09-23T18:16:56.931] [INFO] FabricConfig - config.client.tlsEnable  true
[2020-09-23T18:16:56.931] [DEBUG] FabricGateway - LOADING CONFIGURATION  [OBJECT OBJECT]
[2020-09-23T18:16:56.931] [INFO] FabricConfig - FabricConfig, this.config.channels  mychannel
[2020-09-23T18:16:56.933] [DEBUG] FabricGateway - An identity for the admin user: cups already exists in the wallet
[2020-09-23T18:17:09.201] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:17:09.208] [DEBUG] FabricClient - Client channels >> [{"channel_id":"mychannel"}]
[2020-09-23T18:17:09.208] [DEBUG] FabricClient - Initializing channel  mychannel
[2020-09-23T18:17:09.237] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:17:09.237] [DEBUG] FabricClient - Genesis Block for client [kafka_default]
[2020-09-23T18:17:09.237] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:17:09.240] [DEBUG] FabricClient - Channel genesis hash for channel [mychannel] >> c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8
[2020-09-23T18:17:09.240] [DEBUG] FabricClient - Initialized channel >> mychannel
[2020-09-23T18:17:09.241] [INFO] Platform - initializeListener, network_id, network_client  kafka_default { name: 'kafka',
  version: '1.0.0',
  client:
   { tlsEnable: true,
     adminCredential: { id: 'cups', password: '123456789' },
     enableAuthentication: true,
     organization: 'Org1MSP',
     connection: { timeout: [Object] } },
  channels: { mychannel: { peers: [Object], connection: [Object] } },
  organizations:
   { Org1MSP:
      { mspid: 'Org1MSP',
        adminPrivateKey: [Object],
        peers: [Array],
        signedCert: [Object] } },
  peers:
   { 'peer0.org1.example.com':
      { tlsCACerts: [Object],
        url: 'grpcs://peer0.org1.example.com:7051' } } }
[2020-09-23T18:17:09.255] [INFO] main - Please open web browser to access ï¼šhttp://localhost:8080/
[2020-09-23T18:17:09.255] [INFO] main - pid is 6332
[2020-09-23T18:17:09.380] [DEBUG] Sync - Start synchronizer
[2020-09-23T18:17:09.522] [DEBUG] Synchronizer -  Synchronizer initialized
[2020-09-23T18:17:10.122] [INFO] Synchronizer - initialize : 60
[2020-09-23T18:17:10.123] [DEBUG] SyncPlatform - ******* Initialization started for child client process ****** [ 'kafka_default', 'kafka_default', '1' ]
[2020-09-23T18:17:10.123] [INFO] SyncPlatform - Sync process is started for the network : [kafka_default] and client : [kafka_default]
[2020-09-23T18:17:10.123] [DEBUG] SyncPlatform - Blocks synch interval time >> 60000
[2020-09-23T18:17:10.123] [DEBUG] FabricUtils - ************ Initializing fabric client for [kafka_default]************
[2020-09-23T18:17:10.123] [DEBUG] FabricClient - Client configuration [kafka_default]  ...
[2020-09-23T18:17:10.124] [INFO] FabricConfig - config.client.tlsEnable  true
[2020-09-23T18:17:10.124] [DEBUG] FabricGateway - LOADING CONFIGURATION  [OBJECT OBJECT]
[2020-09-23T18:17:10.124] [INFO] FabricConfig - FabricConfig, this.config.channels  mychannel
[2020-09-23T18:17:10.140] [DEBUG] FabricGateway - An identity for the admin user: cups already exists in the wallet
[2020-09-23T18:17:22.412] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:17:22.412] [DEBUG] FabricClient - Client channels >> [{"channel_id":"mychannel"}]
[2020-09-23T18:17:22.416] [DEBUG] FabricClient - Initializing channel  mychannel
[2020-09-23T18:17:22.445] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:17:22.446] [DEBUG] FabricClient - Genesis Block for client [kafka_default]
[2020-09-23T18:17:22.446] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:17:22.448] [DEBUG] FabricClient - Channel genesis hash for channel [mychannel] >> c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8
[2020-09-23T18:17:22.448] [DEBUG] FabricClient - Initialized channel >> mychannel
[2020-09-23T18:17:22.455] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:17:22.455] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:17:22.467] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:17:22.467] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:17:22.474] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:17:34.590] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:17:34.594] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:17:34.596] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:17:34.598] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:17:34.601] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:17:34.632] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:17:34.636] [DEBUG] SyncPlatform - ******* Initialization end for child client process kafka_default ******
[2020-09-23T18:17:34.637] [INFO] Sync - Synchronizer pid is 6351
[2020-09-23T18:17:34.672] [DEBUG] SyncServices - New Block  >>>>>>> {"low":1,"high":0,"unsigned":true}
[2020-09-23T18:17:34.673] [INFO] FabricUtils - generateBlockHash 1
[2020-09-23T18:17:34.675] [INFO] FabricEvent - Successfully created channel event hub for [mychannel]
[2020-09-23T18:17:34.680] [DEBUG] SyncServices - saveTransaction  true
[2020-09-23T18:17:34.680] [INFO] SyncServices - block_row.blocknum  1
[2020-09-23T18:17:34.683] [DEBUG] Proxy - Message from child {"notify_type":"4","network_id":"kafka_default","channel_name":"mychannel","title":"Block 1 added to Channel: mychannel","type":"block","message":"Block 1 established with 1 tx","time":"2020-09-18T06:51:58.086Z","txcount":1,"datahash":"a2c913147f6bbad94622d16409bcf7b9b500fd27e2e1114047f7d894c3068a7e","blksize":"4"}
[2020-09-23T18:17:34.682] [DEBUG] SyncServices - status  true
[2020-09-23T18:17:34.684] [DEBUG] SyncServices - New Block  >>>>>>> {"low":2,"high":0,"unsigned":true}
[2020-09-23T18:17:34.684] [INFO] FabricUtils - generateBlockHash 2
[2020-09-23T18:17:34.687] [DEBUG] SyncServices - saveTransaction  true
[2020-09-23T18:17:34.687] [INFO] SyncServices - block_row.blocknum  2
[2020-09-23T18:17:34.690] [DEBUG] Proxy - Message from child {"notify_type":"4","network_id":"kafka_default","channel_name":"mychannel","title":"Block 2 added to Channel: mychannel","type":"block","message":"Block 2 established with 1 tx","time":"2020-09-18T06:55:48.182Z","txcount":1,"datahash":"1eed263e75a82afbfee42df5b73f783fb46839633e8bad7feb8c815ba23adb57","blksize":"4"}
[2020-09-23T18:17:34.690] [DEBUG] SyncServices - status  true
[2020-09-23T18:17:34.690] [DEBUG] SyncServices - New Block  >>>>>>> {"low":3,"high":0,"unsigned":true}
[2020-09-23T18:17:34.690] [INFO] FabricUtils - generateBlockHash 3
[2020-09-23T18:17:34.694] [DEBUG] SyncServices - saveTransaction  true
[2020-09-23T18:17:34.694] [INFO] SyncServices - block_row.blocknum  3
[2020-09-23T18:17:34.696] [DEBUG] Proxy - Message from child {"notify_type":"4","network_id":"kafka_default","channel_name":"mychannel","title":"Block 3 added to Channel: mychannel","type":"block","message":"Block 3 established with 1 tx","time":"2020-09-18T06:57:53.549Z","txcount":1,"datahash":"f5b1eeb91a0036671a04826b3b9373b906c944e38ccc674d21c05f5a3907441f","blksize":"4"}
[2020-09-23T18:17:34.695] [DEBUG] SyncServices - status  true
[2020-09-23T18:17:34.696] [DEBUG] SyncServices - New Block  >>>>>>> {"low":4,"high":0,"unsigned":true}
[2020-09-23T18:17:34.696] [INFO] FabricUtils - generateBlockHash 4
[2020-09-23T18:17:34.699] [DEBUG] SyncServices - saveTransaction  true
[2020-09-23T18:17:34.699] [INFO] SyncServices - block_row.blocknum  4
[2020-09-23T18:17:34.701] [DEBUG] Proxy - Message from child {"notify_type":"4","network_id":"kafka_default","channel_name":"mychannel","title":"Block 4 added to Channel: mychannel","type":"block","message":"Block 4 established with 1 tx","time":"2020-09-18T07:00:10.140Z","txcount":1,"datahash":"6379352d0238b056aa84f71368105871f47cbb2213b7816d8f6896093a8df065","blksize":"4"}
[2020-09-23T18:17:34.701] [DEBUG] SyncServices - status  true
[2020-09-23T18:17:44.676] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:17:56.845] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:17:56.847] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:17:56.848] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:17:56.849] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:17:56.849] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:17:56.857] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:17:56.864] [DEBUG] Proxy - Message from child {"notify_type":"3","network_id":"kafka_default","channel_name":"mychannel"}
[2020-09-23T18:17:56.864] [INFO] Platform - getClient (id:kafka_default)
[2020-09-23T18:17:56.864] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:18:04.638] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:18:04.647] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:18:04.647] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:18:04.661] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:18:04.662] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:18:04.663] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:18:09.062] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:18:16.765] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:18:16.767] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:18:16.767] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:18:16.768] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:18:16.769] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:18:16.785] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:18:34.659] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:18:34.681] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:18:34.682] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:18:34.694] [DEBUG] FabricGateway - queryChainInfo BlockchainInfo {
  height: Long { low: 5, high: 0, unsigned: true },
  currentBlockHash:
   <Buffer f0 7a 9f 0d 68 77 29 6e 19 3b 50 07 0c 6a 0d 81 e4 4c 13 5b c0 88 29 9d 9e 34 07 f0 22 f1 5b d6>,
  previousBlockHash:
   <Buffer 9a 8e ae af 67 08 e5 50 54 47 88 75 02 3e aa 7d aa 50 7b 80 06 16 34 cf 5f 59 03 03 b7 63 18 43> }
[2020-09-23T18:18:34.709] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:18:34.709] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:18:34.710] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:18:34.811] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:18:34.811] [DEBUG] SyncServices - New Block  >>>>>>> {"low":0,"high":0,"unsigned":true}
[2020-09-23T18:18:34.811] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:18:34.816] [DEBUG] SyncServices - saveTransaction  true
[2020-09-23T18:18:34.816] [INFO] SyncServices - block_row.blocknum  0
[2020-09-23T18:18:34.818] [DEBUG] Proxy - Message from child {"notify_type":"4","network_id":"kafka_default","channel_name":"mychannel","title":"Block 0 added to Channel: mychannel","type":"block","message":"Block 0 established with 1 tx","time":"2020-09-18T06:51:21.000Z","txcount":1,"datahash":"54b3604dca1352a56356a7f545c8f7a3b5bd643f665a085ca9418fffa65b626e","blksize":"12"}
[2020-09-23T18:18:34.818] [DEBUG] SyncServices - status  true
[2020-09-23T18:18:44.813] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:18:46.850] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:18:46.854] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:18:46.855] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:18:46.855] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:18:46.856] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:18:46.870] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:18:57.007] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:18:57.007] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:19:04.660] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:19:04.668] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:19:04.668] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:19:04.691] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:19:04.692] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:19:04.693] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:19:09.158] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:19:09.159] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:19:09.160] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:19:09.160] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:19:09.161] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:19:09.169] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:19:09.170] [DEBUG] Proxy - Message from child {"notify_type":"2","network_id":"kafka_default","channel_name":"mychannel"}
[2020-09-23T18:19:09.171] [INFO] Platform - getClient (id:kafka_default)
[2020-09-23T18:19:09.171] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:19:16.787] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:19:16.789] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:19:16.789] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:19:16.790] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:19:16.790] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:19:16.831] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:19:21.348] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:19:34.653] [DEBUG] FabricGateway - queryChainInfo BlockchainInfo {
  height: Long { low: 5, high: 0, unsigned: true },
  currentBlockHash:
   <Buffer f0 7a 9f 0d 68 77 29 6e 19 3b 50 07 0c 6a 0d 81 e4 4c 13 5b c0 88 29 9d 9e 34 07 f0 22 f1 5b d6>,
  previousBlockHash:
   <Buffer 9a 8e ae af 67 08 e5 50 54 47 88 75 02 3e aa 7d aa 50 7b 80 06 16 34 cf 5f 59 03 03 b7 63 18 43> }
[2020-09-23T18:19:34.661] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:19:34.672] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:19:34.672] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:19:34.690] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:19:34.691] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:19:34.692] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:19:46.911] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:19:46.912] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:19:46.912] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:19:46.913] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:19:46.914] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:19:46.924] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:20:04.664] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:20:04.673] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:20:04.673] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:20:04.688] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:20:04.688] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:20:04.694] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:20:16.902] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:20:16.903] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:20:16.904] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:20:16.905] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:20:16.905] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:20:16.925] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:20:27.237] [INFO] Sync - <<<<<<<<<<<<<<<<<<<<<<<<<< Closing client processor >>>>>>>>>>>>>>>>>>>>>
[2020-09-23T18:20:27.239] [DEBUG] FabricEvent - disconnectEventHubs()
[2020-09-23T18:20:27.239] [DEBUG] FabricEvent - disconnectChannelEventHub(mychannel)
[2020-09-23T18:20:34.531] [DEBUG] main - false 'ssl-certs' '/home/cups/blockchain-explorer/ssl-certs'
[2020-09-23T18:20:35.334] [DEBUG] Platform - ******* Initialization started for hyperledger fabric platform ******
[2020-09-23T18:20:35.334] [DEBUG] Platform - ******* Initialization started for hyperledger fabric platform ******, { kafka_default:
   { name: 'kafka_default',
     profile: './connection-profile/connection.json' } }
[2020-09-23T18:20:35.334] [DEBUG] Platform - Setting admin organization enrolment files
[2020-09-23T18:20:35.334] [INFO] Platform -  network_config.id  kafka_default  network_config.profile  ./connection-profile/connection.json
[2020-09-23T18:20:35.334] [DEBUG] Platform - Creating network client [kafka_default] >>  { name: 'kafka_default',
  profile: './connection-profile/connection.json' }
[2020-09-23T18:20:35.335] [DEBUG] User - User : cups
[2020-09-23T18:20:35.358] [INFO] Platform - Already registered : admin
[2020-09-23T18:20:35.358] [DEBUG] FabricUtils - ************ Initializing fabric client for [kafka_default]************
[2020-09-23T18:20:35.358] [DEBUG] FabricClient - Client configuration [kafka_default]  ...
[2020-09-23T18:20:35.359] [INFO] FabricConfig - config.client.tlsEnable  true
[2020-09-23T18:20:35.359] [DEBUG] FabricGateway - LOADING CONFIGURATION  [OBJECT OBJECT]
[2020-09-23T18:20:35.359] [INFO] FabricConfig - FabricConfig, this.config.channels  mychannel
[2020-09-23T18:20:35.360] [DEBUG] FabricGateway - An identity for the admin user: cups already exists in the wallet
[2020-09-23T18:20:35.660] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:20:35.661] [DEBUG] FabricClient - Client channels >> [{"channel_id":"mychannel"}]
[2020-09-23T18:20:35.661] [DEBUG] FabricClient - Initializing channel  mychannel
[2020-09-23T18:20:35.679] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:20:35.680] [DEBUG] FabricClient - Genesis Block for client [kafka_default]
[2020-09-23T18:20:35.680] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:20:35.681] [DEBUG] FabricClient - Channel genesis hash for channel [mychannel] >> c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8
[2020-09-23T18:20:35.681] [DEBUG] FabricClient - Initialized channel >> mychannel
[2020-09-23T18:20:35.683] [INFO] Platform - initializeListener, network_id, network_client  kafka_default { name: 'kafka',
  version: '1.0.0',
  client:
   { tlsEnable: true,
     adminCredential: { id: 'cups', password: '123456789' },
     enableAuthentication: true,
     organization: 'Org1MSP',
     connection: { timeout: [Object] } },
  channels: { mychannel: { peers: [Object], connection: [Object] } },
  organizations:
   { Org1MSP:
      { mspid: 'Org1MSP',
        adminPrivateKey: [Object],
        peers: [Array],
        signedCert: [Object] } },
  peers:
   { 'peer0.org1.example.com':
      { tlsCACerts: [Object],
        url: 'grpcs://peer0.org1.example.com:7051' } } }
[2020-09-23T18:20:35.688] [INFO] main - Please open web browser to access ï¼šhttp://localhost:8080/
[2020-09-23T18:20:35.688] [INFO] main - pid is 6427
[2020-09-23T18:20:35.793] [DEBUG] Sync - Start synchronizer
[2020-09-23T18:20:35.915] [DEBUG] Synchronizer -  Synchronizer initialized
[2020-09-23T18:20:36.605] [INFO] Synchronizer - initialize : 60
[2020-09-23T18:20:36.606] [DEBUG] SyncPlatform - ******* Initialization started for child client process ****** [ 'kafka_default', 'kafka_default', '1' ]
[2020-09-23T18:20:36.606] [INFO] SyncPlatform - Sync process is started for the network : [kafka_default] and client : [kafka_default]
[2020-09-23T18:20:36.606] [DEBUG] SyncPlatform - Blocks synch interval time >> 60000
[2020-09-23T18:20:36.607] [DEBUG] FabricUtils - ************ Initializing fabric client for [kafka_default]************
[2020-09-23T18:20:36.607] [DEBUG] FabricClient - Client configuration [kafka_default]  ...
[2020-09-23T18:20:36.607] [INFO] FabricConfig - config.client.tlsEnable  true
[2020-09-23T18:20:36.607] [DEBUG] FabricGateway - LOADING CONFIGURATION  [OBJECT OBJECT]
[2020-09-23T18:20:36.607] [INFO] FabricConfig - FabricConfig, this.config.channels  mychannel
[2020-09-23T18:20:36.621] [DEBUG] FabricGateway - An identity for the admin user: cups already exists in the wallet
[2020-09-23T18:20:36.982] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:20:36.982] [DEBUG] FabricClient - Client channels >> [{"channel_id":"mychannel"}]
[2020-09-23T18:20:36.982] [DEBUG] FabricClient - Initializing channel  mychannel
[2020-09-23T18:20:36.997] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:20:36.998] [DEBUG] FabricClient - Genesis Block for client [kafka_default]
[2020-09-23T18:20:36.998] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:20:37.000] [DEBUG] FabricClient - Channel genesis hash for channel [mychannel] >> c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8
[2020-09-23T18:20:37.000] [DEBUG] FabricClient - Initialized channel >> mychannel
[2020-09-23T18:20:37.029] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:20:37.034] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:20:37.049] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:20:37.049] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:20:37.057] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:20:37.214] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:20:37.216] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:20:37.217] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:20:37.217] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:20:37.218] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:20:37.228] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:20:37.230] [DEBUG] SyncPlatform - ******* Initialization end for child client process kafka_default ******
[2020-09-23T18:20:37.230] [INFO] Sync - Synchronizer pid is 6442
[2020-09-23T18:20:37.260] [DEBUG] SyncServices - New Block  >>>>>>> {"low":1,"high":0,"unsigned":true}
[2020-09-23T18:20:37.261] [INFO] FabricUtils - generateBlockHash 1
[2020-09-23T18:20:37.263] [INFO] FabricEvent - Successfully created channel event hub for [mychannel]
[2020-09-23T18:20:37.265] [DEBUG] SyncServices - saveTransaction  false
[2020-09-23T18:20:37.265] [INFO] SyncServices - block_row.blocknum  1
[2020-09-23T18:20:37.266] [DEBUG] SyncServices - status  false
[2020-09-23T18:20:37.266] [DEBUG] SyncServices - New Block  >>>>>>> {"low":2,"high":0,"unsigned":true}
[2020-09-23T18:20:37.266] [INFO] FabricUtils - generateBlockHash 2
[2020-09-23T18:20:37.267] [DEBUG] SyncServices - saveTransaction  false
[2020-09-23T18:20:37.267] [INFO] SyncServices - block_row.blocknum  2
[2020-09-23T18:20:37.268] [DEBUG] SyncServices - status  false
[2020-09-23T18:20:37.268] [DEBUG] SyncServices - New Block  >>>>>>> {"low":3,"high":0,"unsigned":true}
[2020-09-23T18:20:37.268] [INFO] FabricUtils - generateBlockHash 3
[2020-09-23T18:20:37.269] [DEBUG] SyncServices - saveTransaction  false
[2020-09-23T18:20:37.269] [INFO] SyncServices - block_row.blocknum  3
[2020-09-23T18:20:37.269] [DEBUG] SyncServices - status  false
[2020-09-23T18:20:37.269] [DEBUG] SyncServices - New Block  >>>>>>> {"low":4,"high":0,"unsigned":true}
[2020-09-23T18:20:37.269] [INFO] FabricUtils - generateBlockHash 4
[2020-09-23T18:20:37.271] [DEBUG] SyncServices - saveTransaction  false
[2020-09-23T18:20:37.271] [INFO] SyncServices - block_row.blocknum  4
[2020-09-23T18:20:37.272] [DEBUG] SyncServices - status  false
[2020-09-23T18:20:46.328] [DEBUG] main - false 'ssl-certs' '/home/cups/blockchain-explorer/ssl-certs'
[2020-09-23T18:20:47.264] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:20:47.438] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:20:47.439] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:20:47.441] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:20:47.442] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:20:47.442] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:20:47.454] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:20:47.457] [DEBUG] Proxy - Message from child {"notify_type":"3","network_id":"kafka_default","channel_name":"mychannel"}
[2020-09-23T18:20:47.457] [INFO] Platform - getClient (id:kafka_default)
[2020-09-23T18:20:47.457] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:20:47.687] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:20:47.742] [DEBUG] Platform - ******* Initialization started for hyperledger fabric platform ******
[2020-09-23T18:20:47.742] [DEBUG] Platform - ******* Initialization started for hyperledger fabric platform ******, { kafka_default:
   { name: 'kafka_default',
     profile: './connection-profile/connection.json' } }
[2020-09-23T18:20:47.742] [DEBUG] Platform - Setting admin organization enrolment files
[2020-09-23T18:20:47.742] [INFO] Platform -  network_config.id  kafka_default  network_config.profile  ./connection-profile/connection.json
[2020-09-23T18:20:47.742] [DEBUG] Platform - Creating network client [kafka_default] >>  { name: 'kafka_default',
  profile: './connection-profile/connection.json' }
[2020-09-23T18:20:47.743] [DEBUG] User - User : cups
[2020-09-23T18:20:47.779] [INFO] Platform - Already registered : admin
[2020-09-23T18:20:47.785] [DEBUG] FabricUtils - ************ Initializing fabric client for [kafka_default]************
[2020-09-23T18:20:47.785] [DEBUG] FabricClient - Client configuration [kafka_default]  ...
[2020-09-23T18:20:47.785] [INFO] FabricConfig - config.client.tlsEnable  true
[2020-09-23T18:20:47.785] [DEBUG] FabricGateway - LOADING CONFIGURATION  [OBJECT OBJECT]
[2020-09-23T18:20:47.785] [INFO] FabricConfig - FabricConfig, this.config.channels  mychannel
[2020-09-23T18:20:47.797] [DEBUG] FabricGateway - An identity for the admin user: cups already exists in the wallet
[2020-09-23T18:20:48.100] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:20:48.104] [DEBUG] FabricClient - Client channels >> [{"channel_id":"mychannel"}]
[2020-09-23T18:20:48.104] [DEBUG] FabricClient - Initializing channel  mychannel
[2020-09-23T18:20:48.122] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:20:48.123] [DEBUG] FabricClient - Genesis Block for client [kafka_default]
[2020-09-23T18:20:48.123] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:20:48.125] [DEBUG] FabricClient - Channel genesis hash for channel [mychannel] >> c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8
[2020-09-23T18:20:48.125] [DEBUG] FabricClient - Initialized channel >> mychannel
[2020-09-23T18:20:48.126] [INFO] Platform - initializeListener, network_id, network_client  kafka_default { name: 'kafka',
  version: '1.0.0',
  client:
   { tlsEnable: true,
     adminCredential: { id: 'cups', password: '123456789' },
     enableAuthentication: true,
     organization: 'Org1MSP',
     connection: { timeout: [Object] } },
  channels: { mychannel: { peers: [Object], connection: [Object] } },
  organizations:
   { Org1MSP:
      { mspid: 'Org1MSP',
        adminPrivateKey: [Object],
        peers: [Array],
        signedCert: [Object] } },
  peers:
   { 'peer0.org1.example.com':
      { tlsCACerts: [Object],
        url: 'grpcs://peer0.org1.example.com:7051' } } }
[2020-09-23T18:20:48.132] [ERROR] main - <<<<<<<<<<<<<<<<<<<<<<<<<< Explorer Error >>>>>>>>>>>>>>>>>>>>>
[2020-09-23T18:20:48.133] [ERROR] main - { Error: listen EADDRINUSE: address already in use :::8080
    at Server.setupListenHandle [as _listen2] (net.js:1280:14)
    at listenInCluster (net.js:1328:12)
    at Server.listen (net.js:1415:7)
    at startExplorer (/home/cups/blockchain-explorer/main.js:120:9)
    at process._tickCallback (internal/process/next_tick.js:68:7)
  code: 'EADDRINUSE',
  errno: 'EADDRINUSE',
  syscall: 'listen',
  address: '::',
  port: 8080 }
[2020-09-23T18:20:48.411] [DEBUG] Sync - Start synchronizer
[2020-09-23T18:20:48.669] [DEBUG] Synchronizer -  Synchronizer initialized
[2020-09-23T18:20:49.874] [INFO] Synchronizer - initialize : 60
[2020-09-23T18:20:49.875] [DEBUG] SyncPlatform - ******* Initialization started for child client process ****** [ 'kafka_default', 'kafka_default', '1' ]
[2020-09-23T18:20:49.875] [INFO] SyncPlatform - Sync process is started for the network : [kafka_default] and client : [kafka_default]
[2020-09-23T18:20:49.875] [DEBUG] SyncPlatform - Blocks synch interval time >> 60000
[2020-09-23T18:20:49.876] [DEBUG] FabricUtils - ************ Initializing fabric client for [kafka_default]************
[2020-09-23T18:20:49.876] [DEBUG] FabricClient - Client configuration [kafka_default]  ...
[2020-09-23T18:20:49.876] [INFO] FabricConfig - config.client.tlsEnable  true
[2020-09-23T18:20:49.880] [DEBUG] FabricGateway - LOADING CONFIGURATION  [OBJECT OBJECT]
[2020-09-23T18:20:49.881] [INFO] FabricConfig - FabricConfig, this.config.channels  mychannel
[2020-09-23T18:20:49.895] [DEBUG] FabricGateway - An identity for the admin user: cups already exists in the wallet
[2020-09-23T18:20:50.238] [INFO] Sync - <<<<<<<<<<<<<<<<<<<<<<<<<< Closing client processor >>>>>>>>>>>>>>>>>>>>>
[2020-09-23T18:20:50.372] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:20:50.372] [DEBUG] FabricClient - Client channels >> [{"channel_id":"mychannel"}]
[2020-09-23T18:20:50.372] [DEBUG] FabricClient - Initializing channel  mychannel
[2020-09-23T18:20:50.389] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:20:50.389] [DEBUG] FabricClient - Genesis Block for client [kafka_default]
[2020-09-23T18:20:50.390] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:20:50.391] [DEBUG] FabricClient - Channel genesis hash for channel [mychannel] >> c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8
[2020-09-23T18:20:50.391] [DEBUG] FabricClient - Initialized channel >> mychannel
[2020-09-23T18:20:50.398] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:20:50.399] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:20:50.416] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:20:50.416] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:20:50.419] [ERROR] Sync - <<<<<<<<<<<<<<<<<<<<<<<<<< Synchronizer Error >>>>>>>>>>>>>>>>>>>>>
[2020-09-23T18:20:50.419] [ERROR] Sync - Error: Client was closed and is not queryable
    at process.nextTick (/home/cups/blockchain-explorer/node_modules/pg/lib/client.js:535:25)
    at process._tickCallback (internal/process/next_tick.js:61:11)
[2020-09-23T18:20:50.420] [INFO] Sync - <<<<<<<<<<<<<<<<<<<<<<<<<< Closing client processor >>>>>>>>>>>>>>>>>>>>>
[2020-09-23T18:21:07.230] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:21:07.237] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:21:07.237] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:21:07.254] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:21:07.254] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:21:07.255] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:21:07.384] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:21:07.390] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:21:07.391] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:21:07.392] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:21:07.396] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:21:07.436] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:21:37.240] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:21:37.247] [DEBUG] FabricGateway - queryChainInfo BlockchainInfo {
  height: Long { low: 5, high: 0, unsigned: true },
  currentBlockHash:
   <Buffer f0 7a 9f 0d 68 77 29 6e 19 3b 50 07 0c 6a 0d 81 e4 4c 13 5b c0 88 29 9d 9e 34 07 f0 22 f1 5b d6>,
  previousBlockHash:
   <Buffer 9a 8e ae af 67 08 e5 50 54 47 88 75 02 3e aa 7d aa 50 7b 80 06 16 34 cf 5f 59 03 03 b7 63 18 43> }
[2020-09-23T18:21:37.248] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:21:37.249] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:21:37.259] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:21:37.259] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:21:37.261] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:21:37.398] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:21:37.399] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:21:37.400] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:21:37.400] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:21:37.401] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:21:37.411] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:21:37.479] [INFO] Sync - <<<<<<<<<<<<<<<<<<<<<<<<<< Closing client processor >>>>>>>>>>>>>>>>>>>>>
[2020-09-23T18:21:37.480] [DEBUG] FabricEvent - disconnectEventHubs()
[2020-09-23T18:21:37.480] [DEBUG] FabricEvent - disconnectChannelEventHub(mychannel)
[2020-09-23T18:23:09.033] [DEBUG] main - false 'ssl-certs' '/home/cups/blockchain-explorer/ssl-certs'
[2020-09-23T18:23:09.884] [DEBUG] Platform - ******* Initialization started for hyperledger fabric platform ******
[2020-09-23T18:23:09.884] [DEBUG] Platform - ******* Initialization started for hyperledger fabric platform ******, { kafka_default:
   { name: 'kafka_default',
     profile: './connection-profile/connection.json' } }
[2020-09-23T18:23:09.885] [DEBUG] Platform - Setting admin organization enrolment files
[2020-09-23T18:23:09.885] [INFO] Platform -  network_config.id  kafka_default  network_config.profile  ./connection-profile/connection.json
[2020-09-23T18:23:09.885] [DEBUG] Platform - Creating network client [kafka_default] >>  { name: 'kafka_default',
  profile: './connection-profile/connection.json' }
[2020-09-23T18:23:09.885] [DEBUG] User - User : cups
[2020-09-23T18:23:09.922] [INFO] Platform - Already registered : admin
[2020-09-23T18:23:09.927] [DEBUG] FabricUtils - ************ Initializing fabric client for [kafka_default]************
[2020-09-23T18:23:09.928] [DEBUG] FabricClient - Client configuration [kafka_default]  ...
[2020-09-23T18:23:09.928] [INFO] FabricConfig - config.client.tlsEnable  true
[2020-09-23T18:23:09.928] [DEBUG] FabricGateway - LOADING CONFIGURATION  [OBJECT OBJECT]
[2020-09-23T18:23:09.928] [INFO] FabricConfig - FabricConfig, this.config.channels  mychannel
[2020-09-23T18:23:09.936] [DEBUG] FabricGateway - An identity for the admin user: cups already exists in the wallet
[2020-09-23T18:23:10.233] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:23:10.234] [DEBUG] FabricClient - Client channels >> [{"channel_id":"mychannel"}]
[2020-09-23T18:23:10.234] [DEBUG] FabricClient - Initializing channel  mychannel
[2020-09-23T18:23:10.253] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:23:10.253] [DEBUG] FabricClient - Genesis Block for client [kafka_default]
[2020-09-23T18:23:10.253] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:23:10.255] [DEBUG] FabricClient - Channel genesis hash for channel [mychannel] >> c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8
[2020-09-23T18:23:10.255] [DEBUG] FabricClient - Initialized channel >> mychannel
[2020-09-23T18:23:10.256] [INFO] Platform - initializeListener, network_id, network_client  kafka_default { name: 'kafka',
  version: '1.0.0',
  client:
   { tlsEnable: true,
     adminCredential: { id: 'cups', password: '123456789' },
     enableAuthentication: true,
     organization: 'Org1MSP',
     connection: { timeout: [Object] } },
  channels: { mychannel: { peers: [Object], connection: [Object] } },
  organizations:
   { Org1MSP:
      { mspid: 'Org1MSP',
        adminPrivateKey: [Object],
        peers: [Array],
        signedCert: [Object] } },
  peers:
   { 'peer0.org1.example.com':
      { tlsCACerts: [Object],
        url: 'grpcs://peer0.org1.example.com:7051' } } }
[2020-09-23T18:23:10.263] [INFO] main - Please open web browser to access ï¼šhttp://localhost:8080/
[2020-09-23T18:23:10.263] [INFO] main - pid is 6512
[2020-09-23T18:23:10.409] [DEBUG] Sync - Start synchronizer
[2020-09-23T18:23:10.527] [DEBUG] Synchronizer -  Synchronizer initialized
[2020-09-23T18:23:11.162] [INFO] Synchronizer - initialize : 60
[2020-09-23T18:23:11.163] [DEBUG] SyncPlatform - ******* Initialization started for child client process ****** [ 'kafka_default', 'kafka_default', '1' ]
[2020-09-23T18:23:11.163] [INFO] SyncPlatform - Sync process is started for the network : [kafka_default] and client : [kafka_default]
[2020-09-23T18:23:11.164] [DEBUG] SyncPlatform - Blocks synch interval time >> 60000
[2020-09-23T18:23:11.164] [DEBUG] FabricUtils - ************ Initializing fabric client for [kafka_default]************
[2020-09-23T18:23:11.164] [DEBUG] FabricClient - Client configuration [kafka_default]  ...
[2020-09-23T18:23:11.165] [INFO] FabricConfig - config.client.tlsEnable  true
[2020-09-23T18:23:11.165] [DEBUG] FabricGateway - LOADING CONFIGURATION  [OBJECT OBJECT]
[2020-09-23T18:23:11.165] [INFO] FabricConfig - FabricConfig, this.config.channels  mychannel
[2020-09-23T18:23:11.192] [DEBUG] FabricGateway - An identity for the admin user: cups already exists in the wallet
[2020-09-23T18:23:11.516] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:23:11.516] [DEBUG] FabricClient - Client channels >> [{"channel_id":"mychannel"}]
[2020-09-23T18:23:11.516] [DEBUG] FabricClient - Initializing channel  mychannel
[2020-09-23T18:23:11.536] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:23:11.536] [DEBUG] FabricClient - Genesis Block for client [kafka_default]
[2020-09-23T18:23:11.536] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:23:11.538] [DEBUG] FabricClient - Channel genesis hash for channel [mychannel] >> c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8
[2020-09-23T18:23:11.538] [DEBUG] FabricClient - Initialized channel >> mychannel
[2020-09-23T18:23:11.546] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:23:11.546] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:23:11.570] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:23:11.570] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:23:11.581] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:23:11.749] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:23:11.752] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:23:11.753] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:23:11.754] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:23:11.756] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:23:11.767] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:23:11.772] [DEBUG] SyncPlatform - ******* Initialization end for child client process kafka_default ******
[2020-09-23T18:23:11.772] [INFO] Sync - Synchronizer pid is 6527
[2020-09-23T18:23:11.811] [DEBUG] SyncServices - New Block  >>>>>>> {"low":1,"high":0,"unsigned":true}
[2020-09-23T18:23:11.816] [INFO] FabricUtils - generateBlockHash 1
[2020-09-23T18:23:11.818] [INFO] FabricEvent - Successfully created channel event hub for [mychannel]
[2020-09-23T18:23:11.828] [DEBUG] SyncServices - saveTransaction  false
[2020-09-23T18:23:11.829] [INFO] SyncServices - block_row.blocknum  1
[2020-09-23T18:23:11.834] [DEBUG] SyncServices - status  false
[2020-09-23T18:23:11.834] [DEBUG] SyncServices - New Block  >>>>>>> {"low":2,"high":0,"unsigned":true}
[2020-09-23T18:23:11.834] [INFO] FabricUtils - generateBlockHash 2
[2020-09-23T18:23:11.835] [DEBUG] SyncServices - saveTransaction  false
[2020-09-23T18:23:11.835] [INFO] SyncServices - block_row.blocknum  2
[2020-09-23T18:23:11.840] [DEBUG] SyncServices - status  false
[2020-09-23T18:23:11.840] [DEBUG] SyncServices - New Block  >>>>>>> {"low":3,"high":0,"unsigned":true}
[2020-09-23T18:23:11.840] [INFO] FabricUtils - generateBlockHash 3
[2020-09-23T18:23:11.846] [DEBUG] SyncServices - saveTransaction  false
[2020-09-23T18:23:11.846] [INFO] SyncServices - block_row.blocknum  3
[2020-09-23T18:23:11.848] [DEBUG] SyncServices - status  false
[2020-09-23T18:23:11.848] [DEBUG] SyncServices - New Block  >>>>>>> {"low":4,"high":0,"unsigned":true}
[2020-09-23T18:23:11.848] [INFO] FabricUtils - generateBlockHash 4
[2020-09-23T18:23:11.857] [DEBUG] SyncServices - saveTransaction  false
[2020-09-23T18:23:11.857] [INFO] SyncServices - block_row.blocknum  4
[2020-09-23T18:23:11.857] [DEBUG] SyncServices - status  false
[2020-09-23T18:23:21.820] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:23:21.913] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:23:21.914] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:23:21.915] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:23:21.915] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:23:21.916] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:23:21.923] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:23:21.926] [DEBUG] Proxy - Message from child {"notify_type":"3","network_id":"kafka_default","channel_name":"mychannel"}
[2020-09-23T18:23:21.926] [INFO] Platform - getClient (id:kafka_default)
[2020-09-23T18:23:21.929] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:23:22.076] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:23:41.773] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:23:41.784] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:23:41.785] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:23:41.807] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:23:41.807] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:23:41.809] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:23:41.961] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:23:41.963] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:23:41.963] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:23:41.964] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:23:41.965] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:23:41.980] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:24:11.777] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:24:11.784] [DEBUG] FabricGateway - queryChainInfo BlockchainInfo {
  height: Long { low: 5, high: 0, unsigned: true },
  currentBlockHash:
   <Buffer f0 7a 9f 0d 68 77 29 6e 19 3b 50 07 0c 6a 0d 81 e4 4c 13 5b c0 88 29 9d 9e 34 07 f0 22 f1 5b d6>,
  previousBlockHash:
   <Buffer 9a 8e ae af 67 08 e5 50 54 47 88 75 02 3e aa 7d aa 50 7b 80 06 16 34 cf 5f 59 03 03 b7 63 18 43> }
[2020-09-23T18:24:11.786] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:24:11.786] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:24:11.800] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:24:11.800] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:24:11.802] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:24:11.916] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:24:11.918] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:24:11.918] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:24:11.919] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:24:11.920] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:24:11.929] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:24:41.778] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:24:41.790] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:24:41.790] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:24:41.800] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:24:41.801] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:24:41.803] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:24:42.118] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:24:42.119] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:24:42.120] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:24:42.120] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:24:42.121] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:24:42.126] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:25:11.780] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:25:11.796] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:25:11.797] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:25:11.803] [DEBUG] FabricGateway - queryChainInfo BlockchainInfo {
  height: Long { low: 5, high: 0, unsigned: true },
  currentBlockHash:
   <Buffer f0 7a 9f 0d 68 77 29 6e 19 3b 50 07 0c 6a 0d 81 e4 4c 13 5b c0 88 29 9d 9e 34 07 f0 22 f1 5b d6>,
  previousBlockHash:
   <Buffer 9a 8e ae af 67 08 e5 50 54 47 88 75 02 3e aa 7d aa 50 7b 80 06 16 34 cf 5f 59 03 03 b7 63 18 43> }
[2020-09-23T18:25:11.810] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:25:11.811] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:25:11.812] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:25:11.935] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:25:11.936] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:25:11.936] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:25:11.937] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:25:11.938] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:25:11.948] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:25:41.780] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:25:41.797] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:25:41.797] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:25:41.812] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:25:41.812] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:25:41.816] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:25:41.994] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:25:41.996] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:25:41.996] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:25:41.997] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:25:42.000] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:25:42.012] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:26:11.781] [DEBUG] FabricGateway - queryChainInfo BlockchainInfo {
  height: Long { low: 5, high: 0, unsigned: true },
  currentBlockHash:
   <Buffer f0 7a 9f 0d 68 77 29 6e 19 3b 50 07 0c 6a 0d 81 e4 4c 13 5b c0 88 29 9d 9e 34 07 f0 22 f1 5b d6>,
  previousBlockHash:
   <Buffer 9a 8e ae af 67 08 e5 50 54 47 88 75 02 3e aa 7d aa 50 7b 80 06 16 34 cf 5f 59 03 03 b7 63 18 43> }
[2020-09-23T18:26:11.782] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:26:11.789] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:26:11.789] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:26:11.809] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:26:11.809] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:26:11.812] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:26:11.938] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:26:11.939] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:26:11.940] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:26:11.941] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:26:11.941] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:26:11.947] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:26:41.783] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:26:41.813] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:26:41.816] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:26:41.824] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:26:41.825] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:26:41.827] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:26:41.958] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:26:41.959] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:26:41.960] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:26:41.960] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:26:41.961] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:26:41.966] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:27:11.792] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:27:11.813] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:27:11.814] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:27:11.823] [DEBUG] FabricGateway - queryChainInfo BlockchainInfo {
  height: Long { low: 5, high: 0, unsigned: true },
  currentBlockHash:
   <Buffer f0 7a 9f 0d 68 77 29 6e 19 3b 50 07 0c 6a 0d 81 e4 4c 13 5b c0 88 29 9d 9e 34 07 f0 22 f1 5b d6>,
  previousBlockHash:
   <Buffer 9a 8e ae af 67 08 e5 50 54 47 88 75 02 3e aa 7d aa 50 7b 80 06 16 34 cf 5f 59 03 03 b7 63 18 43> }
[2020-09-23T18:27:11.833] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:27:11.833] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:27:11.838] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:27:12.002] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:27:12.003] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:27:12.004] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:27:12.004] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:27:12.005] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:27:12.021] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:27:41.793] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:27:41.802] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:27:41.803] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:27:41.827] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:27:41.827] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:27:41.829] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:27:42.071] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:27:42.077] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:27:42.080] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:27:42.091] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:27:42.092] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:27:42.112] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:28:11.786] [DEBUG] FabricGateway - queryChainInfo BlockchainInfo {
  height: Long { low: 5, high: 0, unsigned: true },
  currentBlockHash:
   <Buffer f0 7a 9f 0d 68 77 29 6e 19 3b 50 07 0c 6a 0d 81 e4 4c 13 5b c0 88 29 9d 9e 34 07 f0 22 f1 5b d6>,
  previousBlockHash:
   <Buffer 9a 8e ae af 67 08 e5 50 54 47 88 75 02 3e aa 7d aa 50 7b 80 06 16 34 cf 5f 59 03 03 b7 63 18 43> }
[2020-09-23T18:28:11.793] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:28:11.801] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:28:11.801] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:28:11.815] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:28:11.815] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:28:11.816] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:28:11.936] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:28:11.938] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:28:11.939] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:28:11.940] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:28:11.941] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:28:11.954] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:28:41.795] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:28:41.806] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:28:41.806] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:28:41.829] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:28:41.829] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:28:41.830] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:28:41.955] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:28:41.956] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:28:41.957] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:28:41.957] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:28:41.958] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:28:41.977] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:29:05.585] [INFO] Sync - <<<<<<<<<<<<<<<<<<<<<<<<<< Closing client processor >>>>>>>>>>>>>>>>>>>>>
[2020-09-23T18:29:05.587] [DEBUG] FabricEvent - disconnectEventHubs()
[2020-09-23T18:29:05.587] [DEBUG] FabricEvent - disconnectChannelEventHub(mychannel)
[2020-09-23T18:30:07.988] [DEBUG] main - false 'ssl-certs' '/home/cups/blockchain-explorer/ssl-certs'
[2020-09-23T18:30:08.809] [DEBUG] Platform - ******* Initialization started for hyperledger fabric platform ******
[2020-09-23T18:30:08.809] [DEBUG] Platform - ******* Initialization started for hyperledger fabric platform ******, { kafka_default:
   { name: 'kafka_default',
     profile: './connection-profile/connection.json' } }
[2020-09-23T18:30:08.810] [DEBUG] Platform - Setting admin organization enrolment files
[2020-09-23T18:30:08.810] [INFO] Platform -  network_config.id  kafka_default  network_config.profile  ./connection-profile/connection.json
[2020-09-23T18:30:08.810] [DEBUG] Platform - Creating network client [kafka_default] >>  { name: 'kafka_default',
  profile: './connection-profile/connection.json' }
[2020-09-23T18:30:08.810] [DEBUG] User - User : cups
[2020-09-23T18:30:08.833] [INFO] Platform - Already registered : admin
[2020-09-23T18:30:08.833] [DEBUG] FabricUtils - ************ Initializing fabric client for [kafka_default]************
[2020-09-23T18:30:08.833] [DEBUG] FabricClient - Client configuration [kafka_default]  ...
[2020-09-23T18:30:08.834] [INFO] FabricConfig - config.client.tlsEnable  true
[2020-09-23T18:30:08.834] [DEBUG] FabricGateway - LOADING CONFIGURATION  [OBJECT OBJECT]
[2020-09-23T18:30:08.834] [INFO] FabricConfig - FabricConfig, this.config.channels  mychannel
[2020-09-23T18:30:08.835] [DEBUG] FabricGateway - An identity for the admin user: cups already exists in the wallet
[2020-09-23T18:30:09.122] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:30:09.122] [DEBUG] FabricClient - Client channels >> [{"channel_id":"mychannel"}]
[2020-09-23T18:30:09.122] [DEBUG] FabricClient - Initializing channel  mychannel
[2020-09-23T18:30:09.141] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:30:09.142] [DEBUG] FabricClient - Genesis Block for client [kafka_default]
[2020-09-23T18:30:09.142] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:30:09.144] [DEBUG] FabricClient - Channel genesis hash for channel [mychannel] >> c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8
[2020-09-23T18:30:09.144] [DEBUG] FabricClient - Initialized channel >> mychannel
[2020-09-23T18:30:09.145] [INFO] Platform - initializeListener, network_id, network_client  kafka_default { name: 'kafka',
  version: '1.0.0',
  client:
   { tlsEnable: true,
     adminCredential: { id: 'cups', password: '123456789' },
     enableAuthentication: true,
     organization: 'Org1MSP',
     connection: { timeout: [Object] } },
  channels: { mychannel: { peers: [Object], connection: [Object] } },
  organizations:
   { Org1MSP:
      { mspid: 'Org1MSP',
        adminPrivateKey: [Object],
        peers: [Array],
        signedCert: [Object] } },
  peers:
   { 'peer0.org1.example.com':
      { tlsCACerts: [Object],
        url: 'grpcs://peer0.org1.example.com:7051' } } }
[2020-09-23T18:30:09.151] [INFO] main - Please open web browser to access ï¼šhttp://localhost:8080/
[2020-09-23T18:30:09.152] [INFO] main - pid is 6738
[2020-09-23T18:30:09.256] [DEBUG] Sync - Start synchronizer
[2020-09-23T18:30:09.369] [DEBUG] Synchronizer -  Synchronizer initialized
[2020-09-23T18:30:09.983] [INFO] Synchronizer - initialize : 60
[2020-09-23T18:30:09.983] [DEBUG] SyncPlatform - ******* Initialization started for child client process ****** [ 'kafka_default', 'kafka_default', '1' ]
[2020-09-23T18:30:09.983] [INFO] SyncPlatform - Sync process is started for the network : [kafka_default] and client : [kafka_default]
[2020-09-23T18:30:09.984] [DEBUG] SyncPlatform - Blocks synch interval time >> 60000
[2020-09-23T18:30:09.984] [DEBUG] FabricUtils - ************ Initializing fabric client for [kafka_default]************
[2020-09-23T18:30:09.984] [DEBUG] FabricClient - Client configuration [kafka_default]  ...
[2020-09-23T18:30:09.984] [INFO] FabricConfig - config.client.tlsEnable  true
[2020-09-23T18:30:09.984] [DEBUG] FabricGateway - LOADING CONFIGURATION  [OBJECT OBJECT]
[2020-09-23T18:30:09.984] [INFO] FabricConfig - FabricConfig, this.config.channels  mychannel
[2020-09-23T18:30:10.002] [DEBUG] FabricGateway - An identity for the admin user: cups already exists in the wallet
[2020-09-23T18:30:10.334] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:30:10.334] [DEBUG] FabricClient - Client channels >> [{"channel_id":"mychannel"}]
[2020-09-23T18:30:10.335] [DEBUG] FabricClient - Initializing channel  mychannel
[2020-09-23T18:30:10.350] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:30:10.351] [DEBUG] FabricClient - Genesis Block for client [kafka_default]
[2020-09-23T18:30:10.351] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:30:10.353] [DEBUG] FabricClient - Channel genesis hash for channel [mychannel] >> c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8
[2020-09-23T18:30:10.353] [DEBUG] FabricClient - Initialized channel >> mychannel
[2020-09-23T18:30:10.358] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:30:10.358] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:30:10.368] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:30:10.368] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:30:10.372] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:30:10.463] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:30:10.465] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:30:10.467] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:30:10.468] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:30:10.469] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:30:10.475] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:30:10.476] [DEBUG] SyncPlatform - ******* Initialization end for child client process kafka_default ******
[2020-09-23T18:30:10.476] [INFO] Sync - Synchronizer pid is 6753
[2020-09-23T18:30:10.514] [DEBUG] SyncServices - New Block  >>>>>>> {"low":1,"high":0,"unsigned":true}
[2020-09-23T18:30:10.520] [INFO] FabricUtils - generateBlockHash 1
[2020-09-23T18:30:10.522] [INFO] FabricEvent - Successfully created channel event hub for [mychannel]
[2020-09-23T18:30:10.524] [DEBUG] SyncServices - saveTransaction  false
[2020-09-23T18:30:10.524] [INFO] SyncServices - block_row.blocknum  1
[2020-09-23T18:30:10.525] [DEBUG] SyncServices - status  false
[2020-09-23T18:30:10.525] [DEBUG] SyncServices - New Block  >>>>>>> {"low":2,"high":0,"unsigned":true}
[2020-09-23T18:30:10.525] [INFO] FabricUtils - generateBlockHash 2
[2020-09-23T18:30:10.526] [DEBUG] SyncServices - saveTransaction  false
[2020-09-23T18:30:10.526] [INFO] SyncServices - block_row.blocknum  2
[2020-09-23T18:30:10.527] [DEBUG] SyncServices - status  false
[2020-09-23T18:30:10.527] [DEBUG] SyncServices - New Block  >>>>>>> {"low":3,"high":0,"unsigned":true}
[2020-09-23T18:30:10.527] [INFO] FabricUtils - generateBlockHash 3
[2020-09-23T18:30:10.528] [DEBUG] SyncServices - saveTransaction  false
[2020-09-23T18:30:10.528] [INFO] SyncServices - block_row.blocknum  3
[2020-09-23T18:30:10.528] [DEBUG] SyncServices - status  false
[2020-09-23T18:30:10.528] [DEBUG] SyncServices - New Block  >>>>>>> {"low":4,"high":0,"unsigned":true}
[2020-09-23T18:30:10.528] [INFO] FabricUtils - generateBlockHash 4
[2020-09-23T18:30:10.530] [DEBUG] SyncServices - saveTransaction  false
[2020-09-23T18:30:10.530] [INFO] SyncServices - block_row.blocknum  4
[2020-09-23T18:30:10.530] [DEBUG] SyncServices - status  false
[2020-09-23T18:30:20.522] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:30:20.713] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:30:20.721] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:30:20.724] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:30:20.724] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:30:20.732] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:30:20.739] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:30:20.741] [DEBUG] Proxy - Message from child {"notify_type":"3","network_id":"kafka_default","channel_name":"mychannel"}
[2020-09-23T18:30:20.741] [INFO] Platform - getClient (id:kafka_default)
[2020-09-23T18:30:20.741] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:30:20.895] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:30:40.476] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:30:40.491] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:30:40.492] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:30:40.521] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:30:40.521] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:30:40.524] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:30:40.740] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:30:40.742] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:30:40.743] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:30:40.746] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:30:40.747] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:30:40.760] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:31:10.480] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:31:10.486] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:31:10.486] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:31:10.490] [DEBUG] FabricGateway - queryChainInfo BlockchainInfo {
  height: Long { low: 5, high: 0, unsigned: true },
  currentBlockHash:
   <Buffer f0 7a 9f 0d 68 77 29 6e 19 3b 50 07 0c 6a 0d 81 e4 4c 13 5b c0 88 29 9d 9e 34 07 f0 22 f1 5b d6>,
  previousBlockHash:
   <Buffer 9a 8e ae af 67 08 e5 50 54 47 88 75 02 3e aa 7d aa 50 7b 80 06 16 34 cf 5f 59 03 03 b7 63 18 43> }
[2020-09-23T18:31:10.496] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:31:10.496] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:31:10.497] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:31:10.584] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:31:10.585] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:31:10.585] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:31:10.586] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:31:10.587] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:31:10.608] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:31:21.904] [INFO] Sync - <<<<<<<<<<<<<<<<<<<<<<<<<< Closing client processor >>>>>>>>>>>>>>>>>>>>>
[2020-09-23T18:31:21.906] [DEBUG] FabricEvent - disconnectEventHubs()
[2020-09-23T18:31:21.906] [DEBUG] FabricEvent - disconnectChannelEventHub(mychannel)
[2020-09-23T18:31:28.464] [DEBUG] main - false 'ssl-certs' '/home/cups/blockchain-explorer/ssl-certs'
[2020-09-23T18:31:29.303] [DEBUG] Platform - ******* Initialization started for hyperledger fabric platform ******
[2020-09-23T18:31:29.303] [DEBUG] Platform - ******* Initialization started for hyperledger fabric platform ******, { kafka_default:
   { name: 'kafka_default',
     profile: './connection-profile/connection.json' } }
[2020-09-23T18:31:29.303] [DEBUG] Platform - Setting admin organization enrolment files
[2020-09-23T18:31:29.303] [INFO] Platform -  network_config.id  kafka_default  network_config.profile  ./connection-profile/connection.json
[2020-09-23T18:31:29.303] [DEBUG] Platform - Creating network client [kafka_default] >>  { name: 'kafka_default',
  profile: './connection-profile/connection.json' }
[2020-09-23T18:31:29.303] [DEBUG] User - User : cups
[2020-09-23T18:31:29.327] [INFO] Platform - Already registered : admin
[2020-09-23T18:31:29.328] [DEBUG] FabricUtils - ************ Initializing fabric client for [kafka_default]************
[2020-09-23T18:31:29.328] [DEBUG] FabricClient - Client configuration [kafka_default]  ...
[2020-09-23T18:31:29.328] [INFO] FabricConfig - config.client.tlsEnable  true
[2020-09-23T18:31:29.328] [DEBUG] FabricGateway - LOADING CONFIGURATION  [OBJECT OBJECT]
[2020-09-23T18:31:29.328] [INFO] FabricConfig - FabricConfig, this.config.channels  mychannel
[2020-09-23T18:31:29.330] [DEBUG] FabricGateway - An identity for the admin user: cups already exists in the wallet
[2020-09-23T18:31:29.619] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:31:29.620] [DEBUG] FabricClient - Client channels >> [{"channel_id":"mychannel"}]
[2020-09-23T18:31:29.620] [DEBUG] FabricClient - Initializing channel  mychannel
[2020-09-23T18:31:29.637] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:31:29.638] [DEBUG] FabricClient - Genesis Block for client [kafka_default]
[2020-09-23T18:31:29.638] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:31:29.639] [DEBUG] FabricClient - Channel genesis hash for channel [mychannel] >> c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8
[2020-09-23T18:31:29.640] [DEBUG] FabricClient - Initialized channel >> mychannel
[2020-09-23T18:31:29.641] [INFO] Platform - initializeListener, network_id, network_client  kafka_default { name: 'kafka',
  version: '1.0.0',
  client:
   { tlsEnable: true,
     adminCredential: { id: 'cups', password: '123456789' },
     enableAuthentication: true,
     organization: 'Org1MSP',
     connection: { timeout: [Object] } },
  channels: { mychannel: { peers: [Object], connection: [Object] } },
  organizations:
   { Org1MSP:
      { mspid: 'Org1MSP',
        adminPrivateKey: [Object],
        peers: [Array],
        signedCert: [Object] } },
  peers:
   { 'peer0.org1.example.com':
      { tlsCACerts: [Object],
        url: 'grpcs://peer0.org1.example.com:7051' } } }
[2020-09-23T18:31:29.647] [INFO] main - Please open web browser to access ï¼šhttp://localhost:8080/
[2020-09-23T18:31:29.647] [INFO] main - pid is 6830
[2020-09-23T18:31:29.749] [DEBUG] Sync - Start synchronizer
[2020-09-23T18:31:29.866] [DEBUG] Synchronizer -  Synchronizer initialized
[2020-09-23T18:31:30.720] [INFO] Synchronizer - initialize : 60
[2020-09-23T18:31:30.720] [DEBUG] SyncPlatform - ******* Initialization started for child client process ****** [ 'kafka_default', 'kafka_default', '1' ]
[2020-09-23T18:31:30.721] [INFO] SyncPlatform - Sync process is started for the network : [kafka_default] and client : [kafka_default]
[2020-09-23T18:31:30.721] [DEBUG] SyncPlatform - Blocks synch interval time >> 60000
[2020-09-23T18:31:30.721] [DEBUG] FabricUtils - ************ Initializing fabric client for [kafka_default]************
[2020-09-23T18:31:30.722] [DEBUG] FabricClient - Client configuration [kafka_default]  ...
[2020-09-23T18:31:30.722] [INFO] FabricConfig - config.client.tlsEnable  true
[2020-09-23T18:31:30.722] [DEBUG] FabricGateway - LOADING CONFIGURATION  [OBJECT OBJECT]
[2020-09-23T18:31:30.722] [INFO] FabricConfig - FabricConfig, this.config.channels  mychannel
[2020-09-23T18:31:30.738] [DEBUG] FabricGateway - An identity for the admin user: cups already exists in the wallet
[2020-09-23T18:31:31.024] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:31:31.025] [DEBUG] FabricClient - Client channels >> [{"channel_id":"mychannel"}]
[2020-09-23T18:31:31.025] [DEBUG] FabricClient - Initializing channel  mychannel
[2020-09-23T18:31:31.041] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:31:31.042] [DEBUG] FabricClient - Genesis Block for client [kafka_default]
[2020-09-23T18:31:31.042] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:31:31.044] [DEBUG] FabricClient - Channel genesis hash for channel [mychannel] >> c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8
[2020-09-23T18:31:31.044] [DEBUG] FabricClient - Initialized channel >> mychannel
[2020-09-23T18:31:31.050] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:31:31.050] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:31:31.058] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:31:31.059] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:31:31.062] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:31:31.179] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:31:31.181] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:31:31.182] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:31:31.182] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:31:31.183] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:31:31.189] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:31:31.191] [DEBUG] SyncPlatform - ******* Initialization end for child client process kafka_default ******
[2020-09-23T18:31:31.191] [INFO] Sync - Synchronizer pid is 6845
[2020-09-23T18:31:31.215] [DEBUG] SyncServices - New Block  >>>>>>> {"low":1,"high":0,"unsigned":true}
[2020-09-23T18:31:31.215] [INFO] FabricUtils - generateBlockHash 1
[2020-09-23T18:31:31.218] [INFO] FabricEvent - Successfully created channel event hub for [mychannel]
[2020-09-23T18:31:31.220] [DEBUG] SyncServices - saveTransaction  false
[2020-09-23T18:31:31.220] [INFO] SyncServices - block_row.blocknum  1
[2020-09-23T18:31:31.220] [DEBUG] SyncServices - status  false
[2020-09-23T18:31:31.221] [DEBUG] SyncServices - New Block  >>>>>>> {"low":2,"high":0,"unsigned":true}
[2020-09-23T18:31:31.221] [INFO] FabricUtils - generateBlockHash 2
[2020-09-23T18:31:31.222] [DEBUG] SyncServices - saveTransaction  false
[2020-09-23T18:31:31.222] [INFO] SyncServices - block_row.blocknum  2
[2020-09-23T18:31:31.222] [DEBUG] SyncServices - status  false
[2020-09-23T18:31:31.222] [DEBUG] SyncServices - New Block  >>>>>>> {"low":3,"high":0,"unsigned":true}
[2020-09-23T18:31:31.222] [INFO] FabricUtils - generateBlockHash 3
[2020-09-23T18:31:31.224] [DEBUG] SyncServices - saveTransaction  false
[2020-09-23T18:31:31.224] [INFO] SyncServices - block_row.blocknum  3
[2020-09-23T18:31:31.224] [DEBUG] SyncServices - status  false
[2020-09-23T18:31:31.224] [DEBUG] SyncServices - New Block  >>>>>>> {"low":4,"high":0,"unsigned":true}
[2020-09-23T18:31:31.224] [INFO] FabricUtils - generateBlockHash 4
[2020-09-23T18:31:31.226] [DEBUG] SyncServices - saveTransaction  false
[2020-09-23T18:31:31.226] [INFO] SyncServices - block_row.blocknum  4
[2020-09-23T18:31:31.226] [DEBUG] SyncServices - status  false
[2020-09-23T18:31:41.218] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:31:41.386] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:31:41.390] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:31:41.391] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:31:41.393] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:31:41.394] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:31:41.406] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:31:41.408] [DEBUG] Proxy - Message from child {"notify_type":"3","network_id":"kafka_default","channel_name":"mychannel"}
[2020-09-23T18:31:41.408] [INFO] Platform - getClient (id:kafka_default)
[2020-09-23T18:31:41.408] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:31:41.514] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:32:01.191] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:32:01.199] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:32:01.199] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:32:01.221] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:32:01.222] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:32:01.226] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:32:01.520] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:32:01.532] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:32:01.536] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:32:01.537] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:32:01.538] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:32:01.558] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:32:23.947] [INFO] Sync - <<<<<<<<<<<<<<<<<<<<<<<<<< Closing client processor >>>>>>>>>>>>>>>>>>>>>
[2020-09-23T18:32:23.949] [DEBUG] FabricEvent - disconnectEventHubs()
[2020-09-23T18:32:23.949] [DEBUG] FabricEvent - disconnectChannelEventHub(mychannel)
[2020-09-23T18:32:37.018] [DEBUG] main - false 'ssl-certs' '/home/cups/blockchain-explorer/ssl-certs'
[2020-09-23T18:32:38.669] [DEBUG] Platform - ******* Initialization started for hyperledger fabric platform ******
[2020-09-23T18:32:38.669] [DEBUG] Platform - ******* Initialization started for hyperledger fabric platform ******, { kafka_default:
   { name: 'kafka_default',
     profile: './connection-profile/connection.json' } }
[2020-09-23T18:32:38.669] [DEBUG] Platform - Setting admin organization enrolment files
[2020-09-23T18:32:38.669] [INFO] Platform -  network_config.id  kafka_default  network_config.profile  ./connection-profile/connection.json
[2020-09-23T18:32:38.669] [DEBUG] Platform - Creating network client [kafka_default] >>  { name: 'kafka_default',
  profile: './connection-profile/connection.json' }
[2020-09-23T18:32:38.673] [DEBUG] User - User : cups
[2020-09-23T18:32:38.721] [INFO] Platform - Already registered : admin
[2020-09-23T18:32:38.725] [DEBUG] FabricUtils - ************ Initializing fabric client for [kafka_default]************
[2020-09-23T18:32:38.725] [DEBUG] FabricClient - Client configuration [kafka_default]  ...
[2020-09-23T18:32:38.725] [INFO] FabricConfig - config.client.tlsEnable  true
[2020-09-23T18:32:38.725] [DEBUG] FabricGateway - LOADING CONFIGURATION  [OBJECT OBJECT]
[2020-09-23T18:32:38.725] [INFO] FabricConfig - FabricConfig, this.config.channels  mychannel
[2020-09-23T18:32:38.730] [DEBUG] FabricGateway - An identity for the admin user: cups already exists in the wallet
[2020-09-23T18:32:39.253] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:32:39.253] [DEBUG] FabricClient - Client channels >> [{"channel_id":"mychannel"}]
[2020-09-23T18:32:39.253] [DEBUG] FabricClient - Initializing channel  mychannel
[2020-09-23T18:32:39.298] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:32:39.303] [DEBUG] FabricClient - Genesis Block for client [kafka_default]
[2020-09-23T18:32:39.303] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:32:39.309] [DEBUG] FabricClient - Channel genesis hash for channel [mychannel] >> c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8
[2020-09-23T18:32:39.309] [DEBUG] FabricClient - Initialized channel >> mychannel
[2020-09-23T18:32:39.312] [INFO] Platform - initializeListener, network_id, network_client  kafka_default { name: 'kafka',
  version: '1.0.0',
  client:
   { tlsEnable: true,
     adminCredential: { id: 'cups', password: '123456789' },
     enableAuthentication: true,
     organization: 'Org1MSP',
     connection: { timeout: [Object] } },
  channels: { mychannel: { peers: [Object], connection: [Object] } },
  organizations:
   { Org1MSP:
      { mspid: 'Org1MSP',
        adminPrivateKey: [Object],
        peers: [Array],
        signedCert: [Object] } },
  peers:
   { 'peer0.org1.example.com':
      { tlsCACerts: [Object],
        url: 'grpcs://peer0.org1.example.com:7051' } } }
[2020-09-23T18:32:39.326] [INFO] main - Please open web browser to access ï¼šhttp://localhost:8080/
[2020-09-23T18:32:39.326] [INFO] main - pid is 6889
[2020-09-23T18:32:39.542] [DEBUG] Sync - Start synchronizer
[2020-09-23T18:32:39.839] [DEBUG] Synchronizer -  Synchronizer initialized
[2020-09-23T18:32:41.281] [INFO] Synchronizer - initialize : 60
[2020-09-23T18:32:41.281] [DEBUG] SyncPlatform - ******* Initialization started for child client process ****** [ 'kafka_default', 'kafka_default', '1' ]
[2020-09-23T18:32:41.282] [INFO] SyncPlatform - Sync process is started for the network : [kafka_default] and client : [kafka_default]
[2020-09-23T18:32:41.282] [DEBUG] SyncPlatform - Blocks synch interval time >> 60000
[2020-09-23T18:32:41.282] [DEBUG] FabricUtils - ************ Initializing fabric client for [kafka_default]************
[2020-09-23T18:32:41.282] [DEBUG] FabricClient - Client configuration [kafka_default]  ...
[2020-09-23T18:32:41.282] [INFO] FabricConfig - config.client.tlsEnable  true
[2020-09-23T18:32:41.282] [DEBUG] FabricGateway - LOADING CONFIGURATION  [OBJECT OBJECT]
[2020-09-23T18:32:41.282] [INFO] FabricConfig - FabricConfig, this.config.channels  mychannel
[2020-09-23T18:32:41.320] [DEBUG] FabricGateway - An identity for the admin user: cups already exists in the wallet
[2020-09-23T18:32:42.179] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:32:42.184] [DEBUG] FabricClient - Client channels >> [{"channel_id":"mychannel"}]
[2020-09-23T18:32:42.184] [DEBUG] FabricClient - Initializing channel  mychannel
[2020-09-23T18:32:42.221] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:32:42.227] [DEBUG] FabricClient - Genesis Block for client [kafka_default]
[2020-09-23T18:32:42.227] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:32:42.232] [DEBUG] FabricClient - Channel genesis hash for channel [mychannel] >> c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8
[2020-09-23T18:32:42.232] [DEBUG] FabricClient - Initialized channel >> mychannel
[2020-09-23T18:32:42.244] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:32:42.245] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:32:42.261] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:32:42.261] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:32:42.269] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:32:42.501] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:32:42.506] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:32:42.506] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:32:42.510] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:32:42.513] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:32:42.523] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:32:42.533] [DEBUG] SyncPlatform - ******* Initialization end for child client process kafka_default ******
[2020-09-23T18:32:42.533] [INFO] Sync - Synchronizer pid is 6904
[2020-09-23T18:32:42.571] [DEBUG] SyncServices - New Block  >>>>>>> {"low":1,"high":0,"unsigned":true}
[2020-09-23T18:32:42.578] [INFO] FabricUtils - generateBlockHash 1
[2020-09-23T18:32:42.583] [INFO] FabricEvent - Successfully created channel event hub for [mychannel]
[2020-09-23T18:32:42.585] [DEBUG] SyncServices - saveTransaction  false
[2020-09-23T18:32:42.585] [INFO] SyncServices - block_row.blocknum  1
[2020-09-23T18:32:42.586] [DEBUG] SyncServices - status  false
[2020-09-23T18:32:42.586] [DEBUG] SyncServices - New Block  >>>>>>> {"low":2,"high":0,"unsigned":true}
[2020-09-23T18:32:42.586] [INFO] FabricUtils - generateBlockHash 2
[2020-09-23T18:32:42.587] [DEBUG] SyncServices - saveTransaction  false
[2020-09-23T18:32:42.587] [INFO] SyncServices - block_row.blocknum  2
[2020-09-23T18:32:42.587] [DEBUG] SyncServices - status  false
[2020-09-23T18:32:42.587] [DEBUG] SyncServices - New Block  >>>>>>> {"low":3,"high":0,"unsigned":true}
[2020-09-23T18:32:42.587] [INFO] FabricUtils - generateBlockHash 3
[2020-09-23T18:32:42.588] [DEBUG] SyncServices - saveTransaction  false
[2020-09-23T18:32:42.588] [INFO] SyncServices - block_row.blocknum  3
[2020-09-23T18:32:42.589] [DEBUG] SyncServices - status  false
[2020-09-23T18:32:42.589] [DEBUG] SyncServices - New Block  >>>>>>> {"low":4,"high":0,"unsigned":true}
[2020-09-23T18:32:42.589] [INFO] FabricUtils - generateBlockHash 4
[2020-09-23T18:32:42.592] [DEBUG] SyncServices - saveTransaction  false
[2020-09-23T18:32:42.592] [INFO] SyncServices - block_row.blocknum  4
[2020-09-23T18:32:42.596] [DEBUG] SyncServices - status  false
[2020-09-23T18:32:52.583] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:32:52.758] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:32:52.761] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:32:52.763] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:32:52.765] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:32:52.766] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:32:52.774] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:32:52.777] [DEBUG] Proxy - Message from child {"notify_type":"3","network_id":"kafka_default","channel_name":"mychannel"}
[2020-09-23T18:32:52.777] [INFO] Platform - getClient (id:kafka_default)
[2020-09-23T18:32:52.777] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:32:52.975] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:33:12.534] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:33:12.550] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:33:12.550] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:33:12.572] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:33:12.572] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:33:12.580] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:33:12.790] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:33:12.791] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:33:12.792] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:33:12.795] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:33:12.796] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:33:12.814] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:33:42.538] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:33:42.547] [DEBUG] FabricGateway - queryChainInfo BlockchainInfo {
  height: Long { low: 5, high: 0, unsigned: true },
  currentBlockHash:
   <Buffer f0 7a 9f 0d 68 77 29 6e 19 3b 50 07 0c 6a 0d 81 e4 4c 13 5b c0 88 29 9d 9e 34 07 f0 22 f1 5b d6>,
  previousBlockHash:
   <Buffer 9a 8e ae af 67 08 e5 50 54 47 88 75 02 3e aa 7d aa 50 7b 80 06 16 34 cf 5f 59 03 03 b7 63 18 43> }
[2020-09-23T18:33:42.548] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:33:42.549] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:33:42.563] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:33:42.564] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:33:42.568] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:33:42.753] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:33:42.754] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:33:42.755] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:33:42.756] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:33:42.757] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:33:42.772] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:34:12.539] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:34:12.545] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:34:12.545] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:34:12.556] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:34:12.557] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:34:12.557] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:34:12.642] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:34:12.643] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:34:12.644] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:34:12.645] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:34:12.645] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:34:12.650] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:34:42.548] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:34:42.557] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:34:42.557] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:34:42.560] [DEBUG] FabricGateway - queryChainInfo BlockchainInfo {
  height: Long { low: 5, high: 0, unsigned: true },
  currentBlockHash:
   <Buffer f0 7a 9f 0d 68 77 29 6e 19 3b 50 07 0c 6a 0d 81 e4 4c 13 5b c0 88 29 9d 9e 34 07 f0 22 f1 5b d6>,
  previousBlockHash:
   <Buffer 9a 8e ae af 67 08 e5 50 54 47 88 75 02 3e aa 7d aa 50 7b 80 06 16 34 cf 5f 59 03 03 b7 63 18 43> }
[2020-09-23T18:34:42.569] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:34:42.570] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:34:42.571] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:34:42.736] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:34:42.738] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:34:42.738] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:34:42.739] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:34:42.740] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:34:42.748] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:35:12.548] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:35:12.557] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:35:12.558] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:35:12.567] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:35:12.567] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:35:12.568] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:35:12.672] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:35:12.674] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:35:12.675] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:35:12.680] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:35:12.683] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:35:12.693] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:35:42.549] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:35:42.552] [DEBUG] FabricGateway - queryChainInfo BlockchainInfo {
  height: Long { low: 5, high: 0, unsigned: true },
  currentBlockHash:
   <Buffer f0 7a 9f 0d 68 77 29 6e 19 3b 50 07 0c 6a 0d 81 e4 4c 13 5b c0 88 29 9d 9e 34 07 f0 22 f1 5b d6>,
  previousBlockHash:
   <Buffer 9a 8e ae af 67 08 e5 50 54 47 88 75 02 3e aa 7d aa 50 7b 80 06 16 34 cf 5f 59 03 03 b7 63 18 43> }
[2020-09-23T18:35:42.556] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:35:42.557] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:35:42.568] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:35:42.568] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:35:42.569] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:35:42.667] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:35:42.668] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:35:42.669] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:35:42.670] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:35:42.670] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:35:42.677] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:36:12.550] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:36:12.559] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:36:12.559] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:36:12.571] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:36:12.571] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:36:12.572] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:36:12.659] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 5, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:36:12.661] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:36:12.662] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:36:12.663] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:36:12.663] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:36:12.672] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:36:16.314] [DEBUG] SyncServices - New Block  >>>>>>> {"low":5,"high":0,"unsigned":true}
[2020-09-23T18:36:16.314] [INFO] FabricUtils - generateBlockHash 5
[2020-09-23T18:36:16.323] [DEBUG] SyncServices - saveTransaction  true
[2020-09-23T18:36:16.323] [INFO] SyncServices - block_row.blocknum  5
[2020-09-23T18:36:16.325] [DEBUG] Proxy - Message from child {"notify_type":"4","network_id":"kafka_default","channel_name":"mychannel","title":"Block 5 added to Channel: mychannel","type":"block","message":"Block 5 established with 1 tx","time":"2020-09-24T01:36:13.963Z","txcount":1,"datahash":"17f646565653fd73f25c76bae6dd4cd95fb948e9e953cae63aeb0716796b5c82","blksize":"4"}
[2020-09-23T18:36:16.325] [DEBUG] SyncServices - status  true
[2020-09-23T18:36:19.452] [DEBUG] SyncServices - New Block  >>>>>>> {"low":6,"high":0,"unsigned":true}
[2020-09-23T18:36:19.453] [INFO] FabricUtils - generateBlockHash 6
[2020-09-23T18:36:19.461] [DEBUG] SyncServices - saveTransaction  true
[2020-09-23T18:36:19.461] [INFO] SyncServices - block_row.blocknum  6
[2020-09-23T18:36:19.463] [DEBUG] Proxy - Message from child {"notify_type":"4","network_id":"kafka_default","channel_name":"mychannel","title":"Block 6 added to Channel: mychannel","type":"block","message":"Block 6 established with 1 tx","time":"2020-09-24T01:36:17.383Z","txcount":1,"datahash":"069b19d677a4f9141be9a77dfd335ec50e733a0b27dc281e8c8b93b94236597e","blksize":"4"}
[2020-09-23T18:36:19.463] [DEBUG] SyncServices - status  true
[2020-09-23T18:36:42.543] [DEBUG] FabricGateway - queryChainInfo BlockchainInfo {
  height: Long { low: 7, high: 0, unsigned: true },
  currentBlockHash:
   <Buffer 70 35 47 b3 9a f3 09 ef 26 90 c0 1b a1 25 89 4d 5d cb 74 5b 9e 8e bf d0 d9 e9 13 f6 c3 6a a3 fc>,
  previousBlockHash:
   <Buffer f2 af 01 45 d8 c1 3c 67 47 d9 e9 e6 ab c6 e7 f9 02 17 b0 ca 3d 10 d5 2d ec 36 d5 a5 91 84 ad 23> }
[2020-09-23T18:36:42.550] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:36:42.559] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:36:42.559] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:36:42.571] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:36:42.571] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:36:42.572] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:36:42.659] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:36:42.660] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:36:42.661] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:36:42.661] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:36:42.662] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:36:42.674] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:37:12.551] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:37:12.559] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:37:12.559] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:37:12.576] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:37:12.577] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:37:12.578] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:37:12.657] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:37:12.658] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:37:12.659] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:37:12.659] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:37:12.660] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:37:12.665] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:37:42.545] [DEBUG] FabricGateway - queryChainInfo BlockchainInfo {
  height: Long { low: 7, high: 0, unsigned: true },
  currentBlockHash:
   <Buffer 70 35 47 b3 9a f3 09 ef 26 90 c0 1b a1 25 89 4d 5d cb 74 5b 9e 8e bf d0 d9 e9 13 f6 c3 6a a3 fc>,
  previousBlockHash:
   <Buffer f2 af 01 45 d8 c1 3c 67 47 d9 e9 e6 ab c6 e7 f9 02 17 b0 ca 3d 10 d5 2d ec 36 d5 a5 91 84 ad 23> }
[2020-09-23T18:37:42.552] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:37:42.558] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:37:42.558] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:37:42.567] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:37:42.567] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:37:42.568] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:37:42.655] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:37:42.656] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:37:42.656] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:37:42.657] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:37:42.658] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:37:42.665] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:38:12.553] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:38:12.562] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:38:12.562] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:38:12.574] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:38:12.574] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:38:12.575] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:38:12.654] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:38:12.655] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:38:12.655] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:38:12.656] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:38:12.656] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:38:12.665] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:38:42.546] [DEBUG] FabricGateway - queryChainInfo BlockchainInfo {
  height: Long { low: 7, high: 0, unsigned: true },
  currentBlockHash:
   <Buffer 70 35 47 b3 9a f3 09 ef 26 90 c0 1b a1 25 89 4d 5d cb 74 5b 9e 8e bf d0 d9 e9 13 f6 c3 6a a3 fc>,
  previousBlockHash:
   <Buffer f2 af 01 45 d8 c1 3c 67 47 d9 e9 e6 ab c6 e7 f9 02 17 b0 ca 3d 10 d5 2d ec 36 d5 a5 91 84 ad 23> }
[2020-09-23T18:38:42.554] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:38:42.560] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:38:42.560] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:38:42.570] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:38:42.570] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:38:42.572] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:38:42.657] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:38:42.658] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:38:42.659] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:38:42.660] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:38:42.660] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:38:42.668] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:39:12.555] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:39:12.563] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:39:12.563] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:39:12.576] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:39:12.576] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:39:12.577] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:39:12.658] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:39:12.660] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:39:12.660] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:39:12.661] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:39:12.662] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:39:12.671] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:39:42.556] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:39:42.569] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:39:42.569] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:39:42.575] [DEBUG] FabricGateway - queryChainInfo BlockchainInfo {
  height: Long { low: 7, high: 0, unsigned: true },
  currentBlockHash:
   <Buffer 70 35 47 b3 9a f3 09 ef 26 90 c0 1b a1 25 89 4d 5d cb 74 5b 9e 8e bf d0 d9 e9 13 f6 c3 6a a3 fc>,
  previousBlockHash:
   <Buffer f2 af 01 45 d8 c1 3c 67 47 d9 e9 e6 ab c6 e7 f9 02 17 b0 ca 3d 10 d5 2d ec 36 d5 a5 91 84 ad 23> }
[2020-09-23T18:39:42.581] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:39:42.581] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:39:42.582] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:39:42.661] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:39:42.662] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:39:42.663] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:39:42.664] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:39:42.666] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:39:42.674] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:40:12.556] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:40:12.563] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:40:12.563] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:40:12.574] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:40:12.574] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:40:12.575] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:40:12.650] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:40:12.651] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:40:12.652] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:40:12.653] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:40:12.653] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:40:12.660] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:40:42.551] [DEBUG] FabricGateway - queryChainInfo BlockchainInfo {
  height: Long { low: 7, high: 0, unsigned: true },
  currentBlockHash:
   <Buffer 70 35 47 b3 9a f3 09 ef 26 90 c0 1b a1 25 89 4d 5d cb 74 5b 9e 8e bf d0 d9 e9 13 f6 c3 6a a3 fc>,
  previousBlockHash:
   <Buffer f2 af 01 45 d8 c1 3c 67 47 d9 e9 e6 ab c6 e7 f9 02 17 b0 ca 3d 10 d5 2d ec 36 d5 a5 91 84 ad 23> }
[2020-09-23T18:40:42.557] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:40:42.565] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:40:42.565] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:40:42.577] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:40:42.577] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:40:42.578] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:40:42.679] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:40:42.680] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:40:42.681] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:40:42.682] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:40:42.682] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:40:42.690] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:41:12.558] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:41:12.566] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:41:12.566] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:41:12.578] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:41:12.578] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:41:12.579] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:41:12.729] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:41:12.732] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:41:12.732] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:41:12.733] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:41:12.734] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:41:12.744] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:41:42.553] [DEBUG] FabricGateway - queryChainInfo BlockchainInfo {
  height: Long { low: 7, high: 0, unsigned: true },
  currentBlockHash:
   <Buffer 70 35 47 b3 9a f3 09 ef 26 90 c0 1b a1 25 89 4d 5d cb 74 5b 9e 8e bf d0 d9 e9 13 f6 c3 6a a3 fc>,
  previousBlockHash:
   <Buffer f2 af 01 45 d8 c1 3c 67 47 d9 e9 e6 ab c6 e7 f9 02 17 b0 ca 3d 10 d5 2d ec 36 d5 a5 91 84 ad 23> }
[2020-09-23T18:41:42.559] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:41:42.571] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:41:42.571] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:41:42.585] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:41:42.585] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:41:42.587] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:41:42.832] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:41:42.833] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:41:42.834] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:41:42.834] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:41:42.835] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:41:42.843] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:42:12.560] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:42:12.567] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:42:12.568] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:42:12.580] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:42:12.580] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:42:12.581] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:42:12.669] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:42:12.670] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:42:12.671] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:42:12.671] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:42:12.672] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:42:12.679] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:42:18.883] [INFO] Sync - <<<<<<<<<<<<<<<<<<<<<<<<<< Closing client processor >>>>>>>>>>>>>>>>>>>>>
[2020-09-23T18:42:18.885] [DEBUG] FabricEvent - disconnectEventHubs()
[2020-09-23T18:42:18.885] [DEBUG] FabricEvent - disconnectChannelEventHub(mychannel)
[2020-09-23T18:42:58.052] [DEBUG] main - false 'ssl-certs' '/home/cups/blockchain-explorer/ssl-certs'
[2020-09-23T18:42:58.903] [DEBUG] Platform - ******* Initialization started for hyperledger fabric platform ******
[2020-09-23T18:42:58.903] [DEBUG] Platform - ******* Initialization started for hyperledger fabric platform ******, { kafka_default:
   { name: 'kafka_default',
     profile: './connection-profile/connection.json' } }
[2020-09-23T18:42:58.903] [DEBUG] Platform - Setting admin organization enrolment files
[2020-09-23T18:42:58.903] [INFO] Platform -  network_config.id  kafka_default  network_config.profile  ./connection-profile/connection.json
[2020-09-23T18:42:58.903] [DEBUG] Platform - Creating network client [kafka_default] >>  { name: 'kafka_default',
  profile: './connection-profile/connection.json' }
[2020-09-23T18:42:58.904] [DEBUG] User - User : cups
[2020-09-23T18:42:58.945] [INFO] Platform - Already registered : admin
[2020-09-23T18:42:58.946] [DEBUG] FabricUtils - ************ Initializing fabric client for [kafka_default]************
[2020-09-23T18:42:58.946] [DEBUG] FabricClient - Client configuration [kafka_default]  ...
[2020-09-23T18:42:58.947] [INFO] FabricConfig - config.client.tlsEnable  true
[2020-09-23T18:42:58.947] [DEBUG] FabricGateway - LOADING CONFIGURATION  [OBJECT OBJECT]
[2020-09-23T18:42:58.947] [INFO] FabricConfig - FabricConfig, this.config.channels  mychannel
[2020-09-23T18:42:58.956] [DEBUG] FabricGateway - An identity for the admin user: cups already exists in the wallet
[2020-09-23T18:42:59.263] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:42:59.264] [DEBUG] FabricClient - Client channels >> [{"channel_id":"mychannel"}]
[2020-09-23T18:42:59.264] [DEBUG] FabricClient - Initializing channel  mychannel
[2020-09-23T18:42:59.282] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:42:59.282] [DEBUG] FabricClient - Genesis Block for client [kafka_default]
[2020-09-23T18:42:59.282] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:42:59.284] [DEBUG] FabricClient - Channel genesis hash for channel [mychannel] >> c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8
[2020-09-23T18:42:59.284] [DEBUG] FabricClient - Initialized channel >> mychannel
[2020-09-23T18:42:59.285] [INFO] Platform - initializeListener, network_id, network_client  kafka_default { name: 'kafka',
  version: '1.0.0',
  client:
   { tlsEnable: true,
     adminCredential: { id: 'cups', password: '123456789' },
     enableAuthentication: true,
     organization: 'Org1MSP',
     connection: { timeout: [Object] } },
  channels: { mychannel: { peers: [Object], connection: [Object] } },
  organizations:
   { Org1MSP:
      { mspid: 'Org1MSP',
        adminPrivateKey: [Object],
        peers: [Array],
        signedCert: [Object] } },
  peers:
   { 'peer0.org1.example.com':
      { tlsCACerts: [Object],
        url: 'grpcs://peer0.org1.example.com:7051' } } }
[2020-09-23T18:42:59.292] [INFO] main - Please open web browser to access ï¼šhttp://localhost:8080/
[2020-09-23T18:42:59.294] [INFO] main - pid is 7144
[2020-09-23T18:42:59.438] [DEBUG] Sync - Start synchronizer
[2020-09-23T18:42:59.592] [DEBUG] Synchronizer -  Synchronizer initialized
[2020-09-23T18:43:00.294] [INFO] Synchronizer - initialize : 60
[2020-09-23T18:43:00.295] [DEBUG] SyncPlatform - ******* Initialization started for child client process ****** [ 'kafka_default', 'kafka_default', '1' ]
[2020-09-23T18:43:00.295] [INFO] SyncPlatform - Sync process is started for the network : [kafka_default] and client : [kafka_default]
[2020-09-23T18:43:00.295] [DEBUG] SyncPlatform - Blocks synch interval time >> 60000
[2020-09-23T18:43:00.296] [DEBUG] FabricUtils - ************ Initializing fabric client for [kafka_default]************
[2020-09-23T18:43:00.296] [DEBUG] FabricClient - Client configuration [kafka_default]  ...
[2020-09-23T18:43:00.296] [INFO] FabricConfig - config.client.tlsEnable  true
[2020-09-23T18:43:00.296] [DEBUG] FabricGateway - LOADING CONFIGURATION  [OBJECT OBJECT]
[2020-09-23T18:43:00.296] [INFO] FabricConfig - FabricConfig, this.config.channels  mychannel
[2020-09-23T18:43:00.325] [DEBUG] FabricGateway - An identity for the admin user: cups already exists in the wallet
[2020-09-23T18:43:00.644] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:43:00.645] [DEBUG] FabricClient - Client channels >> [{"channel_id":"mychannel"}]
[2020-09-23T18:43:00.645] [DEBUG] FabricClient - Initializing channel  mychannel
[2020-09-23T18:43:00.666] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:43:00.667] [DEBUG] FabricClient - Genesis Block for client [kafka_default]
[2020-09-23T18:43:00.667] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:43:00.669] [DEBUG] FabricClient - Channel genesis hash for channel [mychannel] >> c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8
[2020-09-23T18:43:00.669] [DEBUG] FabricClient - Initialized channel >> mychannel
[2020-09-23T18:43:00.676] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:43:00.676] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:43:00.698] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:43:00.699] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:43:00.706] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:43:00.870] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:43:00.872] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:43:00.873] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:43:00.873] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:43:00.874] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:43:00.883] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:43:00.891] [DEBUG] SyncPlatform - ******* Initialization end for child client process kafka_default ******
[2020-09-23T18:43:00.892] [INFO] Sync - Synchronizer pid is 7159
[2020-09-23T18:43:00.933] [DEBUG] SyncServices - New Block  >>>>>>> {"low":1,"high":0,"unsigned":true}
[2020-09-23T18:43:00.936] [INFO] FabricUtils - generateBlockHash 1
[2020-09-23T18:43:00.941] [INFO] FabricEvent - Successfully created channel event hub for [mychannel]
[2020-09-23T18:43:00.946] [DEBUG] SyncServices - saveTransaction  false
[2020-09-23T18:43:00.946] [INFO] SyncServices - block_row.blocknum  1
[2020-09-23T18:43:00.948] [DEBUG] SyncServices - status  false
[2020-09-23T18:43:00.949] [DEBUG] SyncServices - New Block  >>>>>>> {"low":2,"high":0,"unsigned":true}
[2020-09-23T18:43:00.949] [INFO] FabricUtils - generateBlockHash 2
[2020-09-23T18:43:00.957] [DEBUG] SyncServices - saveTransaction  false
[2020-09-23T18:43:00.957] [INFO] SyncServices - block_row.blocknum  2
[2020-09-23T18:43:00.958] [DEBUG] SyncServices - status  false
[2020-09-23T18:43:00.958] [DEBUG] SyncServices - New Block  >>>>>>> {"low":3,"high":0,"unsigned":true}
[2020-09-23T18:43:00.958] [INFO] FabricUtils - generateBlockHash 3
[2020-09-23T18:43:00.959] [DEBUG] SyncServices - saveTransaction  false
[2020-09-23T18:43:00.959] [INFO] SyncServices - block_row.blocknum  3
[2020-09-23T18:43:00.960] [DEBUG] SyncServices - status  false
[2020-09-23T18:43:00.960] [DEBUG] SyncServices - New Block  >>>>>>> {"low":4,"high":0,"unsigned":true}
[2020-09-23T18:43:00.960] [INFO] FabricUtils - generateBlockHash 4
[2020-09-23T18:43:00.967] [DEBUG] SyncServices - saveTransaction  false
[2020-09-23T18:43:00.967] [INFO] SyncServices - block_row.blocknum  4
[2020-09-23T18:43:00.967] [DEBUG] SyncServices - status  false
[2020-09-23T18:43:00.967] [DEBUG] SyncServices - New Block  >>>>>>> {"low":5,"high":0,"unsigned":true}
[2020-09-23T18:43:00.967] [INFO] FabricUtils - generateBlockHash 5
[2020-09-23T18:43:00.971] [DEBUG] SyncServices - saveTransaction  false
[2020-09-23T18:43:00.971] [INFO] SyncServices - block_row.blocknum  5
[2020-09-23T18:43:00.972] [DEBUG] SyncServices - status  false
[2020-09-23T18:43:00.972] [DEBUG] SyncServices - New Block  >>>>>>> {"low":6,"high":0,"unsigned":true}
[2020-09-23T18:43:00.972] [INFO] FabricUtils - generateBlockHash 6
[2020-09-23T18:43:00.973] [DEBUG] SyncServices - saveTransaction  false
[2020-09-23T18:43:00.973] [INFO] SyncServices - block_row.blocknum  6
[2020-09-23T18:43:00.974] [DEBUG] SyncServices - status  false
[2020-09-23T18:43:10.941] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:43:11.027] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:43:11.029] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:43:11.029] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:43:11.030] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:43:11.031] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:43:11.036] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:43:11.038] [DEBUG] Proxy - Message from child {"notify_type":"3","network_id":"kafka_default","channel_name":"mychannel"}
[2020-09-23T18:43:11.038] [INFO] Platform - getClient (id:kafka_default)
[2020-09-23T18:43:11.044] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:43:11.188] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:43:30.892] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:43:30.905] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:43:30.905] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:43:30.956] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:43:30.956] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:43:30.958] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:43:31.096] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:43:31.097] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:43:31.098] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:43:31.098] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:43:31.099] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:43:31.105] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:44:00.901] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:44:00.908] [DEBUG] FabricGateway - queryChainInfo BlockchainInfo {
  height: Long { low: 7, high: 0, unsigned: true },
  currentBlockHash:
   <Buffer 70 35 47 b3 9a f3 09 ef 26 90 c0 1b a1 25 89 4d 5d cb 74 5b 9e 8e bf d0 d9 e9 13 f6 c3 6a a3 fc>,
  previousBlockHash:
   <Buffer f2 af 01 45 d8 c1 3c 67 47 d9 e9 e6 ab c6 e7 f9 02 17 b0 ca 3d 10 d5 2d ec 36 d5 a5 91 84 ad 23> }
[2020-09-23T18:44:00.910] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:44:00.910] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:44:00.925] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:44:00.928] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:44:00.937] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:44:01.127] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:44:01.130] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:44:01.131] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:44:01.131] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:44:01.132] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:44:01.151] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:44:30.901] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:44:30.910] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:44:30.910] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:44:30.928] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:44:30.928] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:44:30.931] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:44:31.064] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:44:31.065] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:44:31.066] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:44:31.067] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:44:31.068] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:44:31.076] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:45:00.902] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:45:00.912] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:45:00.912] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:45:00.926] [DEBUG] FabricGateway - queryChainInfo BlockchainInfo {
  height: Long { low: 7, high: 0, unsigned: true },
  currentBlockHash:
   <Buffer 70 35 47 b3 9a f3 09 ef 26 90 c0 1b a1 25 89 4d 5d cb 74 5b 9e 8e bf d0 d9 e9 13 f6 c3 6a a3 fc>,
  previousBlockHash:
   <Buffer f2 af 01 45 d8 c1 3c 67 47 d9 e9 e6 ab c6 e7 f9 02 17 b0 ca 3d 10 d5 2d ec 36 d5 a5 91 84 ad 23> }
[2020-09-23T18:45:00.935] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:45:00.936] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:45:00.937] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:45:01.078] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:45:01.079] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:45:01.080] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:45:01.082] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:45:01.082] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:45:01.090] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:45:30.903] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:45:30.911] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:45:30.911] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:45:30.933] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:45:30.933] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:45:30.934] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:45:31.065] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:45:31.067] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:45:31.068] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:45:31.069] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:45:31.070] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:45:31.078] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:46:00.903] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:46:00.907] [DEBUG] FabricGateway - queryChainInfo BlockchainInfo {
  height: Long { low: 7, high: 0, unsigned: true },
  currentBlockHash:
   <Buffer 70 35 47 b3 9a f3 09 ef 26 90 c0 1b a1 25 89 4d 5d cb 74 5b 9e 8e bf d0 d9 e9 13 f6 c3 6a a3 fc>,
  previousBlockHash:
   <Buffer f2 af 01 45 d8 c1 3c 67 47 d9 e9 e6 ab c6 e7 f9 02 17 b0 ca 3d 10 d5 2d ec 36 d5 a5 91 84 ad 23> }
[2020-09-23T18:46:00.911] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:46:00.911] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:46:00.924] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:46:00.924] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:46:00.925] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:46:01.036] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:46:01.038] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:46:01.038] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:46:01.039] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:46:01.040] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:46:01.049] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:46:30.903] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:46:30.911] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:46:30.912] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:46:30.928] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:46:30.929] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:46:30.932] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:46:31.064] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:46:31.066] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:46:31.067] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:46:31.068] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:46:31.069] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:46:31.088] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:47:00.903] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:47:00.907] [DEBUG] FabricGateway - queryChainInfo BlockchainInfo {
  height: Long { low: 7, high: 0, unsigned: true },
  currentBlockHash:
   <Buffer 70 35 47 b3 9a f3 09 ef 26 90 c0 1b a1 25 89 4d 5d cb 74 5b 9e 8e bf d0 d9 e9 13 f6 c3 6a a3 fc>,
  previousBlockHash:
   <Buffer f2 af 01 45 d8 c1 3c 67 47 d9 e9 e6 ab c6 e7 f9 02 17 b0 ca 3d 10 d5 2d ec 36 d5 a5 91 84 ad 23> }
[2020-09-23T18:47:00.911] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:47:00.911] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:47:00.927] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:47:00.927] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:47:00.928] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:47:01.040] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:47:01.043] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:47:01.045] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:47:01.046] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:47:01.047] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:47:01.072] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:47:30.904] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:47:30.913] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:47:30.913] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:47:30.947] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:47:30.947] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:47:30.949] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:47:31.164] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:47:31.166] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:47:31.166] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:47:31.167] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:47:31.167] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:47:31.182] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:48:00.904] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:48:00.908] [DEBUG] FabricGateway - queryChainInfo BlockchainInfo {
  height: Long { low: 7, high: 0, unsigned: true },
  currentBlockHash:
   <Buffer 70 35 47 b3 9a f3 09 ef 26 90 c0 1b a1 25 89 4d 5d cb 74 5b 9e 8e bf d0 d9 e9 13 f6 c3 6a a3 fc>,
  previousBlockHash:
   <Buffer f2 af 01 45 d8 c1 3c 67 47 d9 e9 e6 ab c6 e7 f9 02 17 b0 ca 3d 10 d5 2d ec 36 d5 a5 91 84 ad 23> }
[2020-09-23T18:48:00.912] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:48:00.912] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:48:00.934] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:48:00.934] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:48:00.938] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:48:01.094] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:48:01.099] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:48:01.099] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:48:01.100] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:48:01.101] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:48:01.117] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:48:30.904] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:48:30.911] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:48:30.911] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:48:30.927] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:48:30.927] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:48:30.928] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:48:31.119] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:48:31.121] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:48:31.121] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:48:31.123] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:48:31.125] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:48:31.137] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:49:00.905] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:49:00.908] [DEBUG] FabricGateway - queryChainInfo BlockchainInfo {
  height: Long { low: 7, high: 0, unsigned: true },
  currentBlockHash:
   <Buffer 70 35 47 b3 9a f3 09 ef 26 90 c0 1b a1 25 89 4d 5d cb 74 5b 9e 8e bf d0 d9 e9 13 f6 c3 6a a3 fc>,
  previousBlockHash:
   <Buffer f2 af 01 45 d8 c1 3c 67 47 d9 e9 e6 ab c6 e7 f9 02 17 b0 ca 3d 10 d5 2d ec 36 d5 a5 91 84 ad 23> }
[2020-09-23T18:49:00.912] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:49:00.912] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:49:00.931] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:49:00.931] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:49:00.934] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:49:01.053] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:49:01.055] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:49:01.055] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:49:01.056] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:49:01.057] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:49:01.065] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:49:30.906] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:49:30.911] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:49:30.912] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:49:30.927] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:49:30.932] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:49:30.937] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:49:31.079] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:49:31.081] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:49:31.081] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:49:31.082] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:49:31.083] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:49:31.088] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:50:00.905] [DEBUG] FabricGateway - queryChainInfo BlockchainInfo {
  height: Long { low: 7, high: 0, unsigned: true },
  currentBlockHash:
   <Buffer 70 35 47 b3 9a f3 09 ef 26 90 c0 1b a1 25 89 4d 5d cb 74 5b 9e 8e bf d0 d9 e9 13 f6 c3 6a a3 fc>,
  previousBlockHash:
   <Buffer f2 af 01 45 d8 c1 3c 67 47 d9 e9 e6 ab c6 e7 f9 02 17 b0 ca 3d 10 d5 2d ec 36 d5 a5 91 84 ad 23> }
[2020-09-23T18:50:00.906] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:50:00.911] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:50:00.911] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:50:00.926] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:50:00.928] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:50:00.929] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:50:01.035] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:50:01.037] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:50:01.037] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:50:01.038] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:50:01.039] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:50:01.044] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:50:30.906] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:50:30.913] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:50:30.913] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:50:30.922] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:50:30.922] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:50:30.923] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:50:31.019] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:50:31.020] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:50:31.021] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:50:31.021] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:50:31.022] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:50:31.031] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:51:00.907] [DEBUG] FabricGateway - queryChainInfo BlockchainInfo {
  height: Long { low: 7, high: 0, unsigned: true },
  currentBlockHash:
   <Buffer 70 35 47 b3 9a f3 09 ef 26 90 c0 1b a1 25 89 4d 5d cb 74 5b 9e 8e bf d0 d9 e9 13 f6 c3 6a a3 fc>,
  previousBlockHash:
   <Buffer f2 af 01 45 d8 c1 3c 67 47 d9 e9 e6 ab c6 e7 f9 02 17 b0 ca 3d 10 d5 2d ec 36 d5 a5 91 84 ad 23> }
[2020-09-23T18:51:00.908] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:51:00.914] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:51:00.914] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:51:00.926] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:51:00.929] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:51:00.933] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:51:01.163] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:51:01.172] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:51:01.177] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:51:01.183] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:51:01.204] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:51:01.221] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:51:05.815] [INFO] Sync - <<<<<<<<<<<<<<<<<<<<<<<<<< Closing client processor >>>>>>>>>>>>>>>>>>>>>
[2020-09-23T18:51:05.816] [DEBUG] FabricEvent - disconnectEventHubs()
[2020-09-23T18:51:05.817] [DEBUG] FabricEvent - disconnectChannelEventHub(mychannel)
[2020-09-23T18:54:02.022] [DEBUG] main - false 'ssl-certs' '/home/cups/blockchain-explorer/ssl-certs'
[2020-09-23T18:54:03.217] [DEBUG] Platform - ******* Initialization started for hyperledger fabric platform ******
[2020-09-23T18:54:03.217] [DEBUG] Platform - ******* Initialization started for hyperledger fabric platform ******, { kafka_default:
   { name: 'kafka_default',
     profile: './connection-profile/connection.json' } }
[2020-09-23T18:54:03.217] [DEBUG] Platform - Setting admin organization enrolment files
[2020-09-23T18:54:03.217] [INFO] Platform -  network_config.id  kafka_default  network_config.profile  ./connection-profile/connection.json
[2020-09-23T18:54:03.218] [DEBUG] Platform - Creating network client [kafka_default] >>  { name: 'kafka_default',
  profile: './connection-profile/connection.json' }
[2020-09-23T18:54:03.218] [DEBUG] User - User : cups
[2020-09-23T18:54:03.276] [INFO] Platform - Already registered : admin
[2020-09-23T18:54:03.276] [DEBUG] FabricUtils - ************ Initializing fabric client for [kafka_default]************
[2020-09-23T18:54:03.277] [DEBUG] FabricClient - Client configuration [kafka_default]  ...
[2020-09-23T18:54:03.277] [INFO] FabricConfig - config.client.tlsEnable  true
[2020-09-23T18:54:03.282] [DEBUG] FabricGateway - LOADING CONFIGURATION  [OBJECT OBJECT]
[2020-09-23T18:54:03.282] [INFO] FabricConfig - FabricConfig, this.config.channels  mychannel
[2020-09-23T18:54:03.285] [DEBUG] FabricGateway - An identity for the admin user: cups already exists in the wallet
[2020-09-23T18:54:03.645] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:54:03.645] [DEBUG] FabricClient - Client channels >> [{"channel_id":"mychannel"}]
[2020-09-23T18:54:03.645] [DEBUG] FabricClient - Initializing channel  mychannel
[2020-09-23T18:54:03.663] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:54:03.663] [DEBUG] FabricClient - Genesis Block for client [kafka_default]
[2020-09-23T18:54:03.664] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:54:03.665] [DEBUG] FabricClient - Channel genesis hash for channel [mychannel] >> c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8
[2020-09-23T18:54:03.665] [DEBUG] FabricClient - Initialized channel >> mychannel
[2020-09-23T18:54:03.667] [INFO] Platform - initializeListener, network_id, network_client  kafka_default { name: 'kafka',
  version: '1.0.0',
  client:
   { tlsEnable: true,
     adminCredential: { id: 'cups', password: '123456789' },
     enableAuthentication: true,
     organization: 'Org1MSP',
     connection: { timeout: [Object] } },
  channels: { mychannel: { peers: [Object], connection: [Object] } },
  organizations:
   { Org1MSP:
      { mspid: 'Org1MSP',
        adminPrivateKey: [Object],
        peers: [Array],
        signedCert: [Object] } },
  peers:
   { 'peer0.org1.example.com':
      { tlsCACerts: [Object],
        url: 'grpcs://peer0.org1.example.com:7051' } } }
[2020-09-23T18:54:03.674] [INFO] main - Please open web browser to access ï¼šhttp://localhost:8080/
[2020-09-23T18:54:03.675] [INFO] main - pid is 7441
[2020-09-23T18:54:03.817] [DEBUG] Sync - Start synchronizer
[2020-09-23T18:54:03.953] [DEBUG] Synchronizer -  Synchronizer initialized
[2020-09-23T18:54:04.627] [INFO] Synchronizer - initialize : 60
[2020-09-23T18:54:04.627] [DEBUG] SyncPlatform - ******* Initialization started for child client process ****** [ 'kafka_default', 'kafka_default', '1' ]
[2020-09-23T18:54:04.627] [INFO] SyncPlatform - Sync process is started for the network : [kafka_default] and client : [kafka_default]
[2020-09-23T18:54:04.628] [DEBUG] SyncPlatform - Blocks synch interval time >> 60000
[2020-09-23T18:54:04.628] [DEBUG] FabricUtils - ************ Initializing fabric client for [kafka_default]************
[2020-09-23T18:54:04.628] [DEBUG] FabricClient - Client configuration [kafka_default]  ...
[2020-09-23T18:54:04.628] [INFO] FabricConfig - config.client.tlsEnable  true
[2020-09-23T18:54:04.628] [DEBUG] FabricGateway - LOADING CONFIGURATION  [OBJECT OBJECT]
[2020-09-23T18:54:04.628] [INFO] FabricConfig - FabricConfig, this.config.channels  mychannel
[2020-09-23T18:54:04.661] [DEBUG] FabricGateway - An identity for the admin user: cups already exists in the wallet
[2020-09-23T18:54:04.984] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:54:04.985] [DEBUG] FabricClient - Client channels >> [{"channel_id":"mychannel"}]
[2020-09-23T18:54:04.985] [DEBUG] FabricClient - Initializing channel  mychannel
[2020-09-23T18:54:05.002] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:54:05.002] [DEBUG] FabricClient - Genesis Block for client [kafka_default]
[2020-09-23T18:54:05.002] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:54:05.004] [DEBUG] FabricClient - Channel genesis hash for channel [mychannel] >> c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8
[2020-09-23T18:54:05.004] [DEBUG] FabricClient - Initialized channel >> mychannel
[2020-09-23T18:54:05.009] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:54:05.009] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:54:05.021] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:54:05.023] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:54:05.033] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:54:05.176] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:54:05.178] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:54:05.179] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:54:05.180] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:54:05.181] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:54:05.187] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:54:05.197] [DEBUG] SyncPlatform - ******* Initialization end for child client process kafka_default ******
[2020-09-23T18:54:05.197] [INFO] Sync - Synchronizer pid is 7456
[2020-09-23T18:54:05.239] [DEBUG] SyncServices - New Block  >>>>>>> {"low":1,"high":0,"unsigned":true}
[2020-09-23T18:54:05.240] [INFO] FabricUtils - generateBlockHash 1
[2020-09-23T18:54:05.246] [INFO] FabricEvent - Successfully created channel event hub for [mychannel]
[2020-09-23T18:54:05.250] [DEBUG] SyncServices - saveTransaction  false
[2020-09-23T18:54:05.250] [INFO] SyncServices - block_row.blocknum  1
[2020-09-23T18:54:05.253] [DEBUG] SyncServices - status  false
[2020-09-23T18:54:05.260] [DEBUG] SyncServices - New Block  >>>>>>> {"low":2,"high":0,"unsigned":true}
[2020-09-23T18:54:05.261] [INFO] FabricUtils - generateBlockHash 2
[2020-09-23T18:54:05.262] [DEBUG] SyncServices - saveTransaction  false
[2020-09-23T18:54:05.262] [INFO] SyncServices - block_row.blocknum  2
[2020-09-23T18:54:05.263] [DEBUG] SyncServices - status  false
[2020-09-23T18:54:05.263] [DEBUG] SyncServices - New Block  >>>>>>> {"low":3,"high":0,"unsigned":true}
[2020-09-23T18:54:05.263] [INFO] FabricUtils - generateBlockHash 3
[2020-09-23T18:54:05.264] [DEBUG] SyncServices - saveTransaction  false
[2020-09-23T18:54:05.264] [INFO] SyncServices - block_row.blocknum  3
[2020-09-23T18:54:05.264] [DEBUG] SyncServices - status  false
[2020-09-23T18:54:05.264] [DEBUG] SyncServices - New Block  >>>>>>> {"low":4,"high":0,"unsigned":true}
[2020-09-23T18:54:05.264] [INFO] FabricUtils - generateBlockHash 4
[2020-09-23T18:54:05.272] [DEBUG] SyncServices - saveTransaction  false
[2020-09-23T18:54:05.272] [INFO] SyncServices - block_row.blocknum  4
[2020-09-23T18:54:05.273] [DEBUG] SyncServices - status  false
[2020-09-23T18:54:05.273] [DEBUG] SyncServices - New Block  >>>>>>> {"low":5,"high":0,"unsigned":true}
[2020-09-23T18:54:05.273] [INFO] FabricUtils - generateBlockHash 5
[2020-09-23T18:54:05.275] [DEBUG] SyncServices - saveTransaction  false
[2020-09-23T18:54:05.275] [INFO] SyncServices - block_row.blocknum  5
[2020-09-23T18:54:05.278] [DEBUG] SyncServices - status  false
[2020-09-23T18:54:05.278] [DEBUG] SyncServices - New Block  >>>>>>> {"low":6,"high":0,"unsigned":true}
[2020-09-23T18:54:05.278] [INFO] FabricUtils - generateBlockHash 6
[2020-09-23T18:54:05.282] [DEBUG] SyncServices - saveTransaction  false
[2020-09-23T18:54:05.282] [INFO] SyncServices - block_row.blocknum  6
[2020-09-23T18:54:05.283] [DEBUG] SyncServices - status  false
[2020-09-23T18:54:15.243] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:54:15.358] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:54:15.359] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:54:15.360] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:54:15.361] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:54:15.361] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:54:15.371] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:54:15.380] [DEBUG] Proxy - Message from child {"notify_type":"3","network_id":"kafka_default","channel_name":"mychannel"}
[2020-09-23T18:54:15.380] [INFO] Platform - getClient (id:kafka_default)
[2020-09-23T18:54:15.381] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:54:15.504] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:54:29.364] [DEBUG] NetworkService - Network list  Map {
  'kafka_default' => { name: 'kafka_default',
    instance:
     FabricClient {
       network_id: 'kafka_default',
       fabricGateway: [FabricGateway],
       channelsGenHash: [Map],
       config: [FabricConfig],
       status: true,
       channels: [Array] } } }
[2020-09-23T18:54:29.364] [DEBUG] NetworkService - Network list  kafka_default
[2020-09-23T18:54:29.364] [DEBUG] NetworkService - Network list  [ { id: 'kafka_default', name: 'kafka_default', authEnabled: true } ]
[2020-09-23T18:54:29.368] [DEBUG] Proxy - networkList >> [object Object]
[2020-09-23T18:54:35.198] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:54:35.217] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:54:35.217] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:54:35.239] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:54:35.239] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:54:35.475] [DEBUG] NetworkService - Network list  Map {
  'kafka_default' => { name: 'kafka_default',
    instance:
     FabricClient {
       network_id: 'kafka_default',
       fabricGateway: [FabricGateway],
       channelsGenHash: [Map],
       config: [FabricConfig],
       status: true,
       channels: [Array] } } }
[2020-09-23T18:54:35.475] [DEBUG] NetworkService - Network list  kafka_default
[2020-09-23T18:54:35.475] [DEBUG] NetworkService - Network list  [ { id: 'kafka_default', name: 'kafka_default', authEnabled: true } ]
[2020-09-23T18:54:35.475] [DEBUG] Proxy - networkList >> [object Object]
[2020-09-23T18:54:35.243] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:54:35.667] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:54:35.672] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:54:35.676] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:54:35.677] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:54:35.679] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:54:35.700] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:54:46.194] [DEBUG] Auth - req.body { user: 'cups', password: '123456789', network: 'kafka_default' }
[2020-09-23T18:54:46.194] [DEBUG] User - User : cups
[2020-09-23T18:54:46.200] [INFO] UserService - user.network  kafka_default
[2020-09-23T18:54:46.203] [INFO] UserService - Network: kafka_default enableAuthentication true
[2020-09-23T18:54:46.367] [DEBUG] Proxy - result of authentication >> true
[2020-09-23T18:54:46.543] [DEBUG] Proxy - getCurrentChannel: network_id kafka_default
[2020-09-23T18:54:46.543] [INFO] Platform - getClient (id:kafka_default)
[2020-09-23T18:54:46.545] [DEBUG] Proxy - getCurrentChannel >> {"currentChannel":"c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8"}
[2020-09-23T18:54:46.624] [DEBUG] CRUDService - getBlockAndTxList.byOrgs  false
[2020-09-23T18:54:46.624] [DEBUG] CRUDService - sqlBlockTxList  select a.* from  (
      select (select c.name from channel c where c.channel_genesis_hash =
         'c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8' and c.network_name = 'kafka_default') as channelname, blocks.blocknum,blocks.txcount ,blocks.datahash ,blocks.blockhash ,blocks.prehash,blocks.createdt, blocks.blksize, (
        SELECT  array_agg(txhash) as txhash FROM transactions where blockid = blocks.blocknum and
         channel_genesis_hash = 'c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8' and network_name = 'kafka_default' and createdt between '2020-09-23T01:54:46.624Z' and '2020-09-24T01:54:46.624Z') from blocks where
         blocks.channel_genesis_hash ='c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8' and blocks.network_name = 'kafka_default' and blocknum >= 0 and blocks.createdt between '2020-09-23T01:54:46.624Z' and '2020-09-24T01:54:46.624Z'
									order by blocks.blocknum desc)  a where  a.txhash IS NOT NULL
[2020-09-23T18:54:46.627] [DEBUG] CRUDService - Finished sqlBlockTxList  Promise { <pending> }
[2020-09-23T18:54:46.628] [DEBUG] dbroutes - Return getBlockAndTxList  [ { channelname: 'mychannel',
    blocknum: 6,
    txcount: 1,
    datahash:
     '069b19d677a4f9141be9a77dfd335ec50e733a0b27dc281e8c8b93b94236597e',
    blockhash:
     '703547b39af309ef2690c01ba125894d5dcb745b9e8ebfd0d9e913f6c36aa3fc',
    prehash:
     'f2af0145d8c13c6747d9e9e6abc6e7f90217b0ca3d10d52dec36d5a59184ad23',
    createdt: 2020-09-24T01:36:17.383Z,
    blksize: 4,
    txhash:
     [ 'be267e3e0f618636fe94cf5733f279defb9fd0cf68c64aed037bda24c5aa7e94' ] },
  { channelname: 'mychannel',
    blocknum: 5,
    txcount: 1,
    datahash:
     '17f646565653fd73f25c76bae6dd4cd95fb948e9e953cae63aeb0716796b5c82',
    blockhash:
     'f2af0145d8c13c6747d9e9e6abc6e7f90217b0ca3d10d52dec36d5a59184ad23',
    prehash:
     'f07a9f0d6877296e193b50070c6a0d81e44c135bc088299d9e3407f022f15bd6',
    createdt: 2020-09-24T01:36:13.963Z,
    blksize: 4,
    txhash:
     [ '38520878cd35604767de721cee2547aabb0eb0e510c0ff20e48c323bd791445a' ] } ]
[2020-09-23T18:54:46.685] [INFO] Platform - getClient (id:kafka_default)
[2020-09-23T18:54:46.698] [INFO] Platform - getClient (id:kafka_default)
[2020-09-23T18:54:46.700] [DEBUG] MetricService -  item ------------>  { chaincodename: 'mycc',
  channelname: 'mychannel',
  version: '1.0',
  channel_genesis_hash:
   'c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8',
  path:
   'github.com/hyperledger/fabric/chaincode/chaincode_example02',
  c: 5 }
[2020-09-23T18:54:46.705] [DEBUG] Proxy - getChannels >> ["mychannel"]
[2020-09-23T18:54:46.714] [DEBUG] Proxy - getChannelsInfo >> [{"id":3,"channelname":"mychannel","blocks":7,"channel_genesis_hash":"c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8","transactions":7,"createdat":"2020-09-18T06:51:21.000Z","channel_hash":""}]
[2020-09-23T18:54:46.732] [INFO] Platform - getClient (id:kafka_default)
[2020-09-23T18:54:46.733] [INFO] Platform - getClient (id:kafka_default)
[2020-09-23T18:54:46.747] [DEBUG] CRUDService - getTxList.byOrgs  false
[2020-09-23T18:54:46.756] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:54:46.971] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:54:47.097] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:54:47.098] [DEBUG] Proxy - getPeersStatus >> 4
[2020-09-23T18:54:47.100] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:54:47.102] [DEBUG] Proxy - getPeersStatus >> 4
[2020-09-23T18:55:05.202] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T18:55:05.211] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T18:55:05.212] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T18:55:05.221] [DEBUG] FabricGateway - queryChainInfo BlockchainInfo {
  height: Long { low: 7, high: 0, unsigned: true },
  currentBlockHash:
   <Buffer 70 35 47 b3 9a f3 09 ef 26 90 c0 1b a1 25 89 4d 5d cb 74 5b 9e 8e bf d0 d9 e9 13 f6 c3 6a a3 fc>,
  previousBlockHash:
   <Buffer f2 af 01 45 d8 c1 3c 67 47 d9 e9 e6 ab c6 e7 f9 02 17 b0 ca 3d 10 d5 2d ec 36 d5 a5 91 84 ad 23> }
[2020-09-23T18:55:05.232] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T18:55:05.233] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T18:55:05.236] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T18:55:05.359] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T18:55:05.361] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T18:55:05.361] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T18:55:05.362] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T18:55:05.363] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T18:55:05.378] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T18:55:32.778] [INFO] main - Received kill signal, shutting down gracefully
[2020-09-23T18:55:32.783] [INFO] Sync - <<<<<<<<<<<<<<<<<<<<<<<<<< Closing client processor >>>>>>>>>>>>>>>>>>>>>
[2020-09-23T18:55:32.785] [DEBUG] FabricEvent - disconnectEventHubs()
[2020-09-23T18:55:32.785] [DEBUG] FabricEvent - disconnectChannelEventHub(mychannel)
[2020-09-23T19:08:58.256] [DEBUG] main - false 'ssl-certs' '/home/cups/Desktop/blockchain-explorer/ssl-certs'
[2020-09-23T19:08:59.357] [DEBUG] Platform - ******* Initialization started for hyperledger fabric platform ******
[2020-09-23T19:08:59.357] [DEBUG] Platform - ******* Initialization started for hyperledger fabric platform ******, { kafka_default:
   { name: 'kafka_default',
     profile: './connection-profile/connection.json' } }
[2020-09-23T19:08:59.357] [DEBUG] Platform - Setting admin organization enrolment files
[2020-09-23T19:08:59.357] [INFO] Platform -  network_config.id  kafka_default  network_config.profile  ./connection-profile/connection.json
[2020-09-23T19:08:59.358] [DEBUG] Platform - Creating network client [kafka_default] >>  { name: 'kafka_default',
  profile: './connection-profile/connection.json' }
[2020-09-23T19:08:59.359] [DEBUG] User - User : cups
[2020-09-23T19:08:59.417] [INFO] Platform - Already registered : admin
[2020-09-23T19:08:59.418] [DEBUG] FabricUtils - ************ Initializing fabric client for [kafka_default]************
[2020-09-23T19:08:59.418] [DEBUG] FabricClient - Client configuration [kafka_default]  ...
[2020-09-23T19:08:59.418] [INFO] FabricConfig - config.client.tlsEnable  true
[2020-09-23T19:08:59.420] [DEBUG] FabricGateway - LOADING CONFIGURATION  [OBJECT OBJECT]
[2020-09-23T19:08:59.420] [INFO] FabricConfig - FabricConfig, this.config.channels  mychannel
[2020-09-23T19:08:59.428] [DEBUG] FabricGateway - An identity for the admin user: cups already exists in the wallet
[2020-09-23T19:08:59.754] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T19:08:59.755] [DEBUG] FabricClient - Client channels >> [{"channel_id":"mychannel"}]
[2020-09-23T19:08:59.755] [DEBUG] FabricClient - Initializing channel  mychannel
[2020-09-23T19:08:59.773] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T19:08:59.774] [DEBUG] FabricClient - Genesis Block for client [kafka_default]
[2020-09-23T19:08:59.774] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T19:08:59.775] [DEBUG] FabricClient - Channel genesis hash for channel [mychannel] >> c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8
[2020-09-23T19:08:59.775] [DEBUG] FabricClient - Initialized channel >> mychannel
[2020-09-23T19:08:59.777] [INFO] Platform - initializeListener, network_id, network_client  kafka_default { name: 'kafka',
  version: '1.0.0',
  client:
   { tlsEnable: true,
     adminCredential: { id: 'cups', password: '123456789' },
     enableAuthentication: true,
     organization: 'Org1MSP',
     connection: { timeout: [Object] } },
  channels: { mychannel: { peers: [Object], connection: [Object] } },
  organizations:
   { Org1MSP:
      { mspid: 'Org1MSP',
        adminPrivateKey: [Object],
        peers: [Array],
        signedCert: [Object] } },
  peers:
   { 'peer0.org1.example.com':
      { tlsCACerts: [Object],
        url: 'grpcs://peer0.org1.example.com:7051' } } }
[2020-09-23T19:08:59.783] [INFO] main - Please open web browser to access ï¼šhttp://localhost:8080/
[2020-09-23T19:08:59.783] [INFO] main - pid is 8677
[2020-09-23T19:08:59.950] [DEBUG] Sync - Start synchronizer
[2020-09-23T19:09:00.070] [DEBUG] Synchronizer -  Synchronizer initialized
[2020-09-23T19:09:00.730] [INFO] Synchronizer - initialize : 60
[2020-09-23T19:09:00.730] [DEBUG] SyncPlatform - ******* Initialization started for child client process ****** [ 'kafka_default', 'kafka_default', '1' ]
[2020-09-23T19:09:00.731] [INFO] SyncPlatform - Sync process is started for the network : [kafka_default] and client : [kafka_default]
[2020-09-23T19:09:00.731] [DEBUG] SyncPlatform - Blocks synch interval time >> 60000
[2020-09-23T19:09:00.731] [DEBUG] FabricUtils - ************ Initializing fabric client for [kafka_default]************
[2020-09-23T19:09:00.731] [DEBUG] FabricClient - Client configuration [kafka_default]  ...
[2020-09-23T19:09:00.731] [INFO] FabricConfig - config.client.tlsEnable  true
[2020-09-23T19:09:00.732] [DEBUG] FabricGateway - LOADING CONFIGURATION  [OBJECT OBJECT]
[2020-09-23T19:09:00.732] [INFO] FabricConfig - FabricConfig, this.config.channels  mychannel
[2020-09-23T19:09:00.764] [DEBUG] FabricGateway - An identity for the admin user: cups already exists in the wallet
[2020-09-23T19:09:01.086] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T19:09:01.087] [DEBUG] FabricClient - Client channels >> [{"channel_id":"mychannel"}]
[2020-09-23T19:09:01.087] [DEBUG] FabricClient - Initializing channel  mychannel
[2020-09-23T19:09:01.103] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T19:09:01.103] [DEBUG] FabricClient - Genesis Block for client [kafka_default]
[2020-09-23T19:09:01.103] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T19:09:01.106] [DEBUG] FabricClient - Channel genesis hash for channel [mychannel] >> c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8
[2020-09-23T19:09:01.106] [DEBUG] FabricClient - Initialized channel >> mychannel
[2020-09-23T19:09:01.114] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T19:09:01.114] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T19:09:01.128] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T19:09:01.128] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T19:09:01.146] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T19:09:01.393] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T19:09:01.399] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T19:09:01.402] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T19:09:01.406] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T19:09:01.407] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T19:09:01.424] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T19:09:01.426] [DEBUG] SyncPlatform - ******* Initialization end for child client process kafka_default ******
[2020-09-23T19:09:01.426] [INFO] Sync - Synchronizer pid is 8692
[2020-09-23T19:09:01.470] [DEBUG] SyncServices - New Block  >>>>>>> {"low":1,"high":0,"unsigned":true}
[2020-09-23T19:09:01.475] [INFO] FabricUtils - generateBlockHash 1
[2020-09-23T19:09:01.481] [INFO] FabricEvent - Successfully created channel event hub for [mychannel]
[2020-09-23T19:09:01.489] [DEBUG] SyncServices - saveTransaction  false
[2020-09-23T19:09:01.489] [INFO] SyncServices - block_row.blocknum  1
[2020-09-23T19:09:01.492] [DEBUG] SyncServices - status  false
[2020-09-23T19:09:01.492] [DEBUG] SyncServices - New Block  >>>>>>> {"low":2,"high":0,"unsigned":true}
[2020-09-23T19:09:01.492] [INFO] FabricUtils - generateBlockHash 2
[2020-09-23T19:09:01.494] [DEBUG] SyncServices - saveTransaction  false
[2020-09-23T19:09:01.494] [INFO] SyncServices - block_row.blocknum  2
[2020-09-23T19:09:01.497] [DEBUG] SyncServices - status  false
[2020-09-23T19:09:01.497] [DEBUG] SyncServices - New Block  >>>>>>> {"low":3,"high":0,"unsigned":true}
[2020-09-23T19:09:01.497] [INFO] FabricUtils - generateBlockHash 3
[2020-09-23T19:09:01.500] [DEBUG] SyncServices - saveTransaction  false
[2020-09-23T19:09:01.500] [INFO] SyncServices - block_row.blocknum  3
[2020-09-23T19:09:01.501] [DEBUG] SyncServices - status  false
[2020-09-23T19:09:01.501] [DEBUG] SyncServices - New Block  >>>>>>> {"low":4,"high":0,"unsigned":true}
[2020-09-23T19:09:01.501] [INFO] FabricUtils - generateBlockHash 4
[2020-09-23T19:09:01.505] [DEBUG] SyncServices - saveTransaction  false
[2020-09-23T19:09:01.505] [INFO] SyncServices - block_row.blocknum  4
[2020-09-23T19:09:01.506] [DEBUG] SyncServices - status  false
[2020-09-23T19:09:01.506] [DEBUG] SyncServices - New Block  >>>>>>> {"low":5,"high":0,"unsigned":true}
[2020-09-23T19:09:01.506] [INFO] FabricUtils - generateBlockHash 5
[2020-09-23T19:09:01.511] [DEBUG] SyncServices - saveTransaction  false
[2020-09-23T19:09:01.511] [INFO] SyncServices - block_row.blocknum  5
[2020-09-23T19:09:01.514] [DEBUG] SyncServices - status  false
[2020-09-23T19:09:01.514] [DEBUG] SyncServices - New Block  >>>>>>> {"low":6,"high":0,"unsigned":true}
[2020-09-23T19:09:01.514] [INFO] FabricUtils - generateBlockHash 6
[2020-09-23T19:09:01.518] [DEBUG] SyncServices - saveTransaction  false
[2020-09-23T19:09:01.518] [INFO] SyncServices - block_row.blocknum  6
[2020-09-23T19:09:01.519] [DEBUG] SyncServices - status  false
[2020-09-23T19:09:11.483] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T19:09:11.655] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T19:09:11.657] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T19:09:11.663] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T19:09:11.670] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T19:09:11.672] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T19:09:11.691] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T19:09:11.698] [DEBUG] Proxy - Message from child {"notify_type":"3","network_id":"kafka_default","channel_name":"mychannel"}
[2020-09-23T19:09:11.698] [INFO] Platform - getClient (id:kafka_default)
[2020-09-23T19:09:11.698] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T19:09:11.925] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T19:09:31.427] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T19:09:31.451] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T19:09:31.454] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T19:09:31.486] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T19:09:31.489] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T19:09:31.491] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T19:09:31.834] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T19:09:31.836] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T19:09:31.837] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T19:09:31.840] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T19:09:31.842] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T19:09:31.862] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T19:09:32.396] [DEBUG] NetworkService - Network list  Map {
  'kafka_default' => { name: 'kafka_default',
    instance:
     FabricClient {
       network_id: 'kafka_default',
       fabricGateway: [FabricGateway],
       channelsGenHash: [Map],
       config: [FabricConfig],
       status: true,
       channels: [Array] } } }
[2020-09-23T19:09:32.396] [DEBUG] NetworkService - Network list  kafka_default
[2020-09-23T19:09:32.396] [DEBUG] NetworkService - Network list  [ { id: 'kafka_default', name: 'kafka_default', authEnabled: true } ]
[2020-09-23T19:09:32.397] [DEBUG] Proxy - networkList >> [object Object]
[2020-09-23T19:09:32.509] [DEBUG] Proxy - getCurrentChannel: network_id kafka_default
[2020-09-23T19:09:32.509] [INFO] Platform - getClient (id:kafka_default)
[2020-09-23T19:09:32.509] [DEBUG] Proxy - getCurrentChannel >> {"currentChannel":"c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8"}
[2020-09-23T19:09:32.718] [DEBUG] CRUDService - getBlockAndTxList.byOrgs  false
[2020-09-23T19:09:32.718] [DEBUG] CRUDService - sqlBlockTxList  select a.* from  (
      select (select c.name from channel c where c.channel_genesis_hash =
         'c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8' and c.network_name = 'kafka_default') as channelname, blocks.blocknum,blocks.txcount ,blocks.datahash ,blocks.blockhash ,blocks.prehash,blocks.createdt, blocks.blksize, (
        SELECT  array_agg(txhash) as txhash FROM transactions where blockid = blocks.blocknum and
         channel_genesis_hash = 'c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8' and network_name = 'kafka_default' and createdt between '2020-09-23T02:09:32.717Z' and '2020-09-24T02:09:32.717Z') from blocks where
         blocks.channel_genesis_hash ='c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8' and blocks.network_name = 'kafka_default' and blocknum >= 0 and blocks.createdt between '2020-09-23T02:09:32.717Z' and '2020-09-24T02:09:32.717Z'
									order by blocks.blocknum desc)  a where  a.txhash IS NOT NULL
[2020-09-23T19:09:32.719] [DEBUG] CRUDService - Finished sqlBlockTxList  Promise { <pending> }
[2020-09-23T19:09:32.729] [DEBUG] dbroutes - Return getBlockAndTxList  [ { channelname: 'mychannel',
    blocknum: 6,
    txcount: 1,
    datahash:
     '069b19d677a4f9141be9a77dfd335ec50e733a0b27dc281e8c8b93b94236597e',
    blockhash:
     '703547b39af309ef2690c01ba125894d5dcb745b9e8ebfd0d9e913f6c36aa3fc',
    prehash:
     'f2af0145d8c13c6747d9e9e6abc6e7f90217b0ca3d10d52dec36d5a59184ad23',
    createdt: 2020-09-24T01:36:17.383Z,
    blksize: 4,
    txhash:
     [ 'be267e3e0f618636fe94cf5733f279defb9fd0cf68c64aed037bda24c5aa7e94' ] },
  { channelname: 'mychannel',
    blocknum: 5,
    txcount: 1,
    datahash:
     '17f646565653fd73f25c76bae6dd4cd95fb948e9e953cae63aeb0716796b5c82',
    blockhash:
     'f2af0145d8c13c6747d9e9e6abc6e7f90217b0ca3d10d52dec36d5a59184ad23',
    prehash:
     'f07a9f0d6877296e193b50070c6a0d81e44c135bc088299d9e3407f022f15bd6',
    createdt: 2020-09-24T01:36:13.963Z,
    blksize: 4,
    txhash:
     [ '38520878cd35604767de721cee2547aabb0eb0e510c0ff20e48c323bd791445a' ] } ]
[2020-09-23T19:09:32.767] [DEBUG] MetricService -  item ------------>  { chaincodename: 'mycc',
  channelname: 'mychannel',
  version: '1.0',
  channel_genesis_hash:
   'c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8',
  path:
   'github.com/hyperledger/fabric/chaincode/chaincode_example02',
  c: 5 }
[2020-09-23T19:09:32.770] [INFO] Platform - getClient (id:kafka_default)
[2020-09-23T19:09:32.778] [DEBUG] Proxy - getChannelsInfo >> [{"id":3,"channelname":"mychannel","blocks":7,"channel_genesis_hash":"c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8","transactions":7,"createdat":"2020-09-18T06:51:21.000Z","channel_hash":""}]
[2020-09-23T19:09:32.785] [INFO] Platform - getClient (id:kafka_default)
[2020-09-23T19:09:32.794] [INFO] Platform - getClient (id:kafka_default)
[2020-09-23T19:09:32.815] [INFO] Platform - getClient (id:kafka_default)
[2020-09-23T19:09:32.828] [DEBUG] Proxy - getChannels >> ["mychannel"]
[2020-09-23T19:09:32.839] [DEBUG] CRUDService - getTxList.byOrgs  false
[2020-09-23T19:09:32.842] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T19:09:33.134] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T19:09:33.315] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T19:09:33.322] [DEBUG] Proxy - getPeersStatus >> 4
[2020-09-23T19:09:33.326] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T19:09:33.337] [DEBUG] Proxy - getPeersStatus >> 4
[2020-09-23T19:10:01.429] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T19:10:01.455] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T19:10:01.455] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T19:10:01.460] [DEBUG] FabricGateway - queryChainInfo BlockchainInfo {
  height: Long { low: 7, high: 0, unsigned: true },
  currentBlockHash:
   <Buffer 70 35 47 b3 9a f3 09 ef 26 90 c0 1b a1 25 89 4d 5d cb 74 5b 9e 8e bf d0 d9 e9 13 f6 c3 6a a3 fc>,
  previousBlockHash:
   <Buffer f2 af 01 45 d8 c1 3c 67 47 d9 e9 e6 ab c6 e7 f9 02 17 b0 ca 3d 10 d5 2d ec 36 d5 a5 91 84 ad 23> }
[2020-09-23T19:10:01.466] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T19:10:01.466] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T19:10:01.468] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T19:10:01.566] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T19:10:01.567] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T19:10:01.568] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T19:10:01.569] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T19:10:01.569] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T19:10:01.579] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T19:10:31.430] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T19:10:31.448] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T19:10:31.448] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T19:10:31.464] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T19:10:31.469] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T19:10:31.470] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T19:10:31.630] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T19:10:31.632] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T19:10:31.632] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T19:10:31.633] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T19:10:31.633] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T19:10:31.642] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T19:10:33.568] [DEBUG] CRUDService - getBlockAndTxList.byOrgs  false
[2020-09-23T19:10:33.568] [DEBUG] CRUDService - sqlBlockTxList  select a.* from  (
      select (select c.name from channel c where c.channel_genesis_hash =
         'c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8' and c.network_name = 'kafka_default') as channelname, blocks.blocknum,blocks.txcount ,blocks.datahash ,blocks.blockhash ,blocks.prehash,blocks.createdt, blocks.blksize, (
        SELECT  array_agg(txhash) as txhash FROM transactions where blockid = blocks.blocknum and
         channel_genesis_hash = 'c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8' and network_name = 'kafka_default' and createdt between '2020-09-23T02:10:33.568Z' and '2020-09-24T02:10:33.568Z') from blocks where
         blocks.channel_genesis_hash ='c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8' and blocks.network_name = 'kafka_default' and blocknum >= 0 and blocks.createdt between '2020-09-23T02:10:33.568Z' and '2020-09-24T02:10:33.568Z'
									order by blocks.blocknum desc)  a where  a.txhash IS NOT NULL
[2020-09-23T19:10:33.569] [DEBUG] CRUDService - Finished sqlBlockTxList  Promise { <pending> }
[2020-09-23T19:10:33.569] [DEBUG] dbroutes - Return getBlockAndTxList  [ { channelname: 'mychannel',
    blocknum: 6,
    txcount: 1,
    datahash:
     '069b19d677a4f9141be9a77dfd335ec50e733a0b27dc281e8c8b93b94236597e',
    blockhash:
     '703547b39af309ef2690c01ba125894d5dcb745b9e8ebfd0d9e913f6c36aa3fc',
    prehash:
     'f2af0145d8c13c6747d9e9e6abc6e7f90217b0ca3d10d52dec36d5a59184ad23',
    createdt: 2020-09-24T01:36:17.383Z,
    blksize: 4,
    txhash:
     [ 'be267e3e0f618636fe94cf5733f279defb9fd0cf68c64aed037bda24c5aa7e94' ] },
  { channelname: 'mychannel',
    blocknum: 5,
    txcount: 1,
    datahash:
     '17f646565653fd73f25c76bae6dd4cd95fb948e9e953cae63aeb0716796b5c82',
    blockhash:
     'f2af0145d8c13c6747d9e9e6abc6e7f90217b0ca3d10d52dec36d5a59184ad23',
    prehash:
     'f07a9f0d6877296e193b50070c6a0d81e44c135bc088299d9e3407f022f15bd6',
    createdt: 2020-09-24T01:36:13.963Z,
    blksize: 4,
    txhash:
     [ '38520878cd35604767de721cee2547aabb0eb0e510c0ff20e48c323bd791445a' ] } ]
[2020-09-23T19:10:33.583] [INFO] Platform - getClient (id:kafka_default)
[2020-09-23T19:10:33.585] [DEBUG] MetricService -  item ------------>  { chaincodename: 'mycc',
  channelname: 'mychannel',
  version: '1.0',
  channel_genesis_hash:
   'c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8',
  path:
   'github.com/hyperledger/fabric/chaincode/chaincode_example02',
  c: 5 }
[2020-09-23T19:10:33.587] [INFO] Platform - getClient (id:kafka_default)
[2020-09-23T19:10:33.589] [DEBUG] Proxy - getChannelsInfo >> [{"id":3,"channelname":"mychannel","blocks":7,"channel_genesis_hash":"c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8","transactions":7,"createdat":"2020-09-18T06:51:21.000Z","channel_hash":""}]
[2020-09-23T19:10:33.613] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T19:10:33.796] [INFO] Platform - getClient (id:kafka_default)
[2020-09-23T19:10:33.799] [DEBUG] CRUDService - getTxList.byOrgs  false
[2020-09-23T19:10:33.799] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T19:10:34.070] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T19:10:34.071] [DEBUG] Proxy - getPeersStatus >> 4
[2020-09-23T19:10:34.077] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T19:10:34.082] [DEBUG] Proxy - getPeersStatus >> 4
[2020-09-23T19:11:01.430] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T19:11:01.438] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T19:11:01.438] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T19:11:01.448] [DEBUG] FabricGateway - queryChainInfo BlockchainInfo {
  height: Long { low: 7, high: 0, unsigned: true },
  currentBlockHash:
   <Buffer 70 35 47 b3 9a f3 09 ef 26 90 c0 1b a1 25 89 4d 5d cb 74 5b 9e 8e bf d0 d9 e9 13 f6 c3 6a a3 fc>,
  previousBlockHash:
   <Buffer f2 af 01 45 d8 c1 3c 67 47 d9 e9 e6 ab c6 e7 f9 02 17 b0 ca 3d 10 d5 2d ec 36 d5 a5 91 84 ad 23> }
[2020-09-23T19:11:01.453] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T19:11:01.453] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T19:11:01.454] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T19:11:01.548] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T19:11:01.549] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T19:11:01.550] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T19:11:01.550] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T19:11:01.551] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T19:11:01.560] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T19:11:15.295] [INFO] Platform - getClient (id:kafka_default)
[2020-09-23T19:11:15.296] [DEBUG] Proxy - getChannelsInfo >> [{"id":3,"channelname":"mychannel","blocks":7,"channel_genesis_hash":"c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8","transactions":7,"createdat":"2020-09-18T06:51:21.000Z","channel_hash":""}]
[2020-09-23T19:11:31.430] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T19:11:31.447] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T19:11:31.450] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T19:11:31.476] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T19:11:31.477] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T19:11:31.478] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T19:11:31.597] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T19:11:31.598] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T19:11:31.599] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T19:11:31.602] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T19:11:31.603] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T19:11:31.623] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T19:11:33.572] [DEBUG] CRUDService - getBlockAndTxList.byOrgs  false
[2020-09-23T19:11:33.572] [DEBUG] CRUDService - sqlBlockTxList  select a.* from  (
      select (select c.name from channel c where c.channel_genesis_hash =
         'c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8' and c.network_name = 'kafka_default') as channelname, blocks.blocknum,blocks.txcount ,blocks.datahash ,blocks.blockhash ,blocks.prehash,blocks.createdt, blocks.blksize, (
        SELECT  array_agg(txhash) as txhash FROM transactions where blockid = blocks.blocknum and
         channel_genesis_hash = 'c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8' and network_name = 'kafka_default' and createdt between '2020-09-23T02:11:33.572Z' and '2020-09-24T02:11:33.572Z') from blocks where
         blocks.channel_genesis_hash ='c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8' and blocks.network_name = 'kafka_default' and blocknum >= 0 and blocks.createdt between '2020-09-23T02:11:33.572Z' and '2020-09-24T02:11:33.572Z'
									order by blocks.blocknum desc)  a where  a.txhash IS NOT NULL
[2020-09-23T19:11:33.573] [DEBUG] CRUDService - Finished sqlBlockTxList  Promise { <pending> }
[2020-09-23T19:11:33.574] [DEBUG] dbroutes - Return getBlockAndTxList  [ { channelname: 'mychannel',
    blocknum: 6,
    txcount: 1,
    datahash:
     '069b19d677a4f9141be9a77dfd335ec50e733a0b27dc281e8c8b93b94236597e',
    blockhash:
     '703547b39af309ef2690c01ba125894d5dcb745b9e8ebfd0d9e913f6c36aa3fc',
    prehash:
     'f2af0145d8c13c6747d9e9e6abc6e7f90217b0ca3d10d52dec36d5a59184ad23',
    createdt: 2020-09-24T01:36:17.383Z,
    blksize: 4,
    txhash:
     [ 'be267e3e0f618636fe94cf5733f279defb9fd0cf68c64aed037bda24c5aa7e94' ] },
  { channelname: 'mychannel',
    blocknum: 5,
    txcount: 1,
    datahash:
     '17f646565653fd73f25c76bae6dd4cd95fb948e9e953cae63aeb0716796b5c82',
    blockhash:
     'f2af0145d8c13c6747d9e9e6abc6e7f90217b0ca3d10d52dec36d5a59184ad23',
    prehash:
     'f07a9f0d6877296e193b50070c6a0d81e44c135bc088299d9e3407f022f15bd6',
    createdt: 2020-09-24T01:36:13.963Z,
    blksize: 4,
    txhash:
     [ '38520878cd35604767de721cee2547aabb0eb0e510c0ff20e48c323bd791445a' ] } ]
[2020-09-23T19:11:33.585] [DEBUG] MetricService -  item ------------>  { chaincodename: 'mycc',
  channelname: 'mychannel',
  version: '1.0',
  channel_genesis_hash:
   'c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8',
  path:
   'github.com/hyperledger/fabric/chaincode/chaincode_example02',
  c: 5 }
[2020-09-23T19:11:33.587] [INFO] Platform - getClient (id:kafka_default)
[2020-09-23T19:11:33.589] [DEBUG] Proxy - getChannelsInfo >> [{"id":3,"channelname":"mychannel","blocks":7,"channel_genesis_hash":"c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8","transactions":7,"createdat":"2020-09-18T06:51:21.000Z","channel_hash":""}]
[2020-09-23T19:11:33.597] [INFO] Platform - getClient (id:kafka_default)
[2020-09-23T19:11:33.609] [INFO] Platform - getClient (id:kafka_default)
[2020-09-23T19:11:33.613] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T19:11:33.796] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T19:11:34.006] [DEBUG] CRUDService - getTxList.byOrgs  false
[2020-09-23T19:11:34.102] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T19:11:34.105] [DEBUG] Proxy - getPeersStatus >> 4
[2020-09-23T19:11:34.114] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T19:11:34.117] [DEBUG] Proxy - getPeersStatus >> 4
[2020-09-23T19:12:01.431] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T19:12:01.435] [DEBUG] FabricGateway - queryChainInfo BlockchainInfo {
  height: Long { low: 7, high: 0, unsigned: true },
  currentBlockHash:
   <Buffer 70 35 47 b3 9a f3 09 ef 26 90 c0 1b a1 25 89 4d 5d cb 74 5b 9e 8e bf d0 d9 e9 13 f6 c3 6a a3 fc>,
  previousBlockHash:
   <Buffer f2 af 01 45 d8 c1 3c 67 47 d9 e9 e6 ab c6 e7 f9 02 17 b0 ca 3d 10 d5 2d ec 36 d5 a5 91 84 ad 23> }
[2020-09-23T19:12:01.440] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T19:12:01.440] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T19:12:01.455] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T19:12:01.456] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T19:12:01.457] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T19:12:01.544] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T19:12:01.545] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T19:12:01.546] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T19:12:01.546] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T19:12:01.547] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T19:12:01.555] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T19:12:31.432] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T19:12:31.441] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T19:12:31.441] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T19:12:31.454] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T19:12:31.455] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T19:12:31.456] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T19:12:31.553] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T19:12:31.554] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T19:12:31.555] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T19:12:31.555] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T19:12:31.556] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T19:12:31.564] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T19:12:33.569] [DEBUG] CRUDService - getBlockAndTxList.byOrgs  false
[2020-09-23T19:12:33.569] [DEBUG] CRUDService - sqlBlockTxList  select a.* from  (
      select (select c.name from channel c where c.channel_genesis_hash =
         'c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8' and c.network_name = 'kafka_default') as channelname, blocks.blocknum,blocks.txcount ,blocks.datahash ,blocks.blockhash ,blocks.prehash,blocks.createdt, blocks.blksize, (
        SELECT  array_agg(txhash) as txhash FROM transactions where blockid = blocks.blocknum and
         channel_genesis_hash = 'c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8' and network_name = 'kafka_default' and createdt between '2020-09-23T02:12:33.569Z' and '2020-09-24T02:12:33.569Z') from blocks where
         blocks.channel_genesis_hash ='c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8' and blocks.network_name = 'kafka_default' and blocknum >= 0 and blocks.createdt between '2020-09-23T02:12:33.569Z' and '2020-09-24T02:12:33.569Z'
									order by blocks.blocknum desc)  a where  a.txhash IS NOT NULL
[2020-09-23T19:12:33.570] [DEBUG] CRUDService - Finished sqlBlockTxList  Promise { <pending> }
[2020-09-23T19:12:33.571] [DEBUG] dbroutes - Return getBlockAndTxList  [ { channelname: 'mychannel',
    blocknum: 6,
    txcount: 1,
    datahash:
     '069b19d677a4f9141be9a77dfd335ec50e733a0b27dc281e8c8b93b94236597e',
    blockhash:
     '703547b39af309ef2690c01ba125894d5dcb745b9e8ebfd0d9e913f6c36aa3fc',
    prehash:
     'f2af0145d8c13c6747d9e9e6abc6e7f90217b0ca3d10d52dec36d5a59184ad23',
    createdt: 2020-09-24T01:36:17.383Z,
    blksize: 4,
    txhash:
     [ 'be267e3e0f618636fe94cf5733f279defb9fd0cf68c64aed037bda24c5aa7e94' ] },
  { channelname: 'mychannel',
    blocknum: 5,
    txcount: 1,
    datahash:
     '17f646565653fd73f25c76bae6dd4cd95fb948e9e953cae63aeb0716796b5c82',
    blockhash:
     'f2af0145d8c13c6747d9e9e6abc6e7f90217b0ca3d10d52dec36d5a59184ad23',
    prehash:
     'f07a9f0d6877296e193b50070c6a0d81e44c135bc088299d9e3407f022f15bd6',
    createdt: 2020-09-24T01:36:13.963Z,
    blksize: 4,
    txhash:
     [ '38520878cd35604767de721cee2547aabb0eb0e510c0ff20e48c323bd791445a' ] } ]
[2020-09-23T19:12:33.600] [DEBUG] MetricService -  item ------------>  { chaincodename: 'mycc',
  channelname: 'mychannel',
  version: '1.0',
  channel_genesis_hash:
   'c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8',
  path:
   'github.com/hyperledger/fabric/chaincode/chaincode_example02',
  c: 5 }
[2020-09-23T19:12:33.602] [INFO] Platform - getClient (id:kafka_default)
[2020-09-23T19:12:33.612] [DEBUG] Proxy - getChannelsInfo >> [{"id":3,"channelname":"mychannel","blocks":7,"channel_genesis_hash":"c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8","transactions":7,"createdat":"2020-09-18T06:51:21.000Z","channel_hash":""}]
[2020-09-23T19:12:33.622] [INFO] Platform - getClient (id:kafka_default)
[2020-09-23T19:12:33.653] [INFO] Platform - getClient (id:kafka_default)
[2020-09-23T19:12:33.654] [DEBUG] CRUDService - getTxList.byOrgs  false
[2020-09-23T19:12:33.664] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T19:12:33.836] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T19:12:34.000] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T19:12:34.000] [DEBUG] Proxy - getPeersStatus >> 4
[2020-09-23T19:12:34.005] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T19:12:34.005] [DEBUG] Proxy - getPeersStatus >> 4
[2020-09-23T19:13:01.433] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T19:13:01.437] [DEBUG] FabricGateway - queryChainInfo BlockchainInfo {
  height: Long { low: 7, high: 0, unsigned: true },
  currentBlockHash:
   <Buffer 70 35 47 b3 9a f3 09 ef 26 90 c0 1b a1 25 89 4d 5d cb 74 5b 9e 8e bf d0 d9 e9 13 f6 c3 6a a3 fc>,
  previousBlockHash:
   <Buffer f2 af 01 45 d8 c1 3c 67 47 d9 e9 e6 ab c6 e7 f9 02 17 b0 ca 3d 10 d5 2d ec 36 d5 a5 91 84 ad 23> }
[2020-09-23T19:13:01.439] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T19:13:01.441] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T19:13:01.454] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T19:13:01.454] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T19:13:01.456] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T19:13:01.558] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T19:13:01.560] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T19:13:01.561] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T19:13:01.561] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T19:13:01.562] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T19:13:01.575] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T19:13:31.435] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T19:13:31.444] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T19:13:31.444] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T19:13:31.471] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T19:13:31.471] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T19:13:31.473] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T19:13:31.571] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T19:13:31.572] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T19:13:31.573] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T19:13:31.573] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T19:13:31.574] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T19:13:31.583] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T19:13:33.569] [DEBUG] CRUDService - getBlockAndTxList.byOrgs  false
[2020-09-23T19:13:33.569] [DEBUG] CRUDService - sqlBlockTxList  select a.* from  (
      select (select c.name from channel c where c.channel_genesis_hash =
         'c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8' and c.network_name = 'kafka_default') as channelname, blocks.blocknum,blocks.txcount ,blocks.datahash ,blocks.blockhash ,blocks.prehash,blocks.createdt, blocks.blksize, (
        SELECT  array_agg(txhash) as txhash FROM transactions where blockid = blocks.blocknum and
         channel_genesis_hash = 'c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8' and network_name = 'kafka_default' and createdt between '2020-09-23T02:13:33.569Z' and '2020-09-24T02:13:33.569Z') from blocks where
         blocks.channel_genesis_hash ='c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8' and blocks.network_name = 'kafka_default' and blocknum >= 0 and blocks.createdt between '2020-09-23T02:13:33.569Z' and '2020-09-24T02:13:33.569Z'
									order by blocks.blocknum desc)  a where  a.txhash IS NOT NULL
[2020-09-23T19:13:33.569] [DEBUG] CRUDService - Finished sqlBlockTxList  Promise { <pending> }
[2020-09-23T19:13:33.570] [DEBUG] dbroutes - Return getBlockAndTxList  [ { channelname: 'mychannel',
    blocknum: 6,
    txcount: 1,
    datahash:
     '069b19d677a4f9141be9a77dfd335ec50e733a0b27dc281e8c8b93b94236597e',
    blockhash:
     '703547b39af309ef2690c01ba125894d5dcb745b9e8ebfd0d9e913f6c36aa3fc',
    prehash:
     'f2af0145d8c13c6747d9e9e6abc6e7f90217b0ca3d10d52dec36d5a59184ad23',
    createdt: 2020-09-24T01:36:17.383Z,
    blksize: 4,
    txhash:
     [ 'be267e3e0f618636fe94cf5733f279defb9fd0cf68c64aed037bda24c5aa7e94' ] },
  { channelname: 'mychannel',
    blocknum: 5,
    txcount: 1,
    datahash:
     '17f646565653fd73f25c76bae6dd4cd95fb948e9e953cae63aeb0716796b5c82',
    blockhash:
     'f2af0145d8c13c6747d9e9e6abc6e7f90217b0ca3d10d52dec36d5a59184ad23',
    prehash:
     'f07a9f0d6877296e193b50070c6a0d81e44c135bc088299d9e3407f022f15bd6',
    createdt: 2020-09-24T01:36:13.963Z,
    blksize: 4,
    txhash:
     [ '38520878cd35604767de721cee2547aabb0eb0e510c0ff20e48c323bd791445a' ] } ]
[2020-09-23T19:13:33.586] [INFO] Platform - getClient (id:kafka_default)
[2020-09-23T19:13:33.588] [DEBUG] MetricService -  item ------------>  { chaincodename: 'mycc',
  channelname: 'mychannel',
  version: '1.0',
  channel_genesis_hash:
   'c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8',
  path:
   'github.com/hyperledger/fabric/chaincode/chaincode_example02',
  c: 5 }
[2020-09-23T19:13:33.595] [DEBUG] Proxy - getChannelsInfo >> [{"id":3,"channelname":"mychannel","blocks":7,"channel_genesis_hash":"c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8","transactions":7,"createdat":"2020-09-18T06:51:21.000Z","channel_hash":""}]
[2020-09-23T19:13:33.610] [INFO] Platform - getClient (id:kafka_default)
[2020-09-23T19:13:33.622] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T19:13:33.773] [INFO] Platform - getClient (id:kafka_default)
[2020-09-23T19:13:33.777] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T19:13:33.927] [DEBUG] CRUDService - getTxList.byOrgs  false
[2020-09-23T19:13:33.988] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T19:13:34.003] [DEBUG] Proxy - getPeersStatus >> 4
[2020-09-23T19:13:34.007] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T19:13:34.009] [DEBUG] Proxy - getPeersStatus >> 4
[2020-09-23T19:14:01.436] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T19:14:01.439] [DEBUG] FabricGateway - queryChainInfo BlockchainInfo {
  height: Long { low: 7, high: 0, unsigned: true },
  currentBlockHash:
   <Buffer 70 35 47 b3 9a f3 09 ef 26 90 c0 1b a1 25 89 4d 5d cb 74 5b 9e 8e bf d0 d9 e9 13 f6 c3 6a a3 fc>,
  previousBlockHash:
   <Buffer f2 af 01 45 d8 c1 3c 67 47 d9 e9 e6 ab c6 e7 f9 02 17 b0 ca 3d 10 d5 2d ec 36 d5 a5 91 84 ad 23> }
[2020-09-23T19:14:01.444] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T19:14:01.444] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T19:14:01.456] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T19:14:01.457] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T19:14:01.458] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T19:14:01.554] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T19:14:01.555] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T19:14:01.556] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T19:14:01.557] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T19:14:01.557] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T19:14:01.571] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T19:14:31.437] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T19:14:31.445] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T19:14:31.445] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T19:14:31.456] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T19:14:31.457] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T19:14:31.458] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T19:14:31.547] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T19:14:31.548] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-23T19:14:31.549] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-23T19:14:31.550] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-23T19:14:31.550] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-23T19:14:31.558] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-23T19:14:33.576] [DEBUG] CRUDService - getBlockAndTxList.byOrgs  false
[2020-09-23T19:14:33.576] [DEBUG] CRUDService - sqlBlockTxList  select a.* from  (
      select (select c.name from channel c where c.channel_genesis_hash =
         'c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8' and c.network_name = 'kafka_default') as channelname, blocks.blocknum,blocks.txcount ,blocks.datahash ,blocks.blockhash ,blocks.prehash,blocks.createdt, blocks.blksize, (
        SELECT  array_agg(txhash) as txhash FROM transactions where blockid = blocks.blocknum and
         channel_genesis_hash = 'c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8' and network_name = 'kafka_default' and createdt between '2020-09-23T02:14:33.576Z' and '2020-09-24T02:14:33.576Z') from blocks where
         blocks.channel_genesis_hash ='c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8' and blocks.network_name = 'kafka_default' and blocknum >= 0 and blocks.createdt between '2020-09-23T02:14:33.576Z' and '2020-09-24T02:14:33.576Z'
									order by blocks.blocknum desc)  a where  a.txhash IS NOT NULL
[2020-09-23T19:14:33.577] [DEBUG] CRUDService - Finished sqlBlockTxList  Promise { <pending> }
[2020-09-23T19:14:33.577] [DEBUG] dbroutes - Return getBlockAndTxList  [ { channelname: 'mychannel',
    blocknum: 6,
    txcount: 1,
    datahash:
     '069b19d677a4f9141be9a77dfd335ec50e733a0b27dc281e8c8b93b94236597e',
    blockhash:
     '703547b39af309ef2690c01ba125894d5dcb745b9e8ebfd0d9e913f6c36aa3fc',
    prehash:
     'f2af0145d8c13c6747d9e9e6abc6e7f90217b0ca3d10d52dec36d5a59184ad23',
    createdt: 2020-09-24T01:36:17.383Z,
    blksize: 4,
    txhash:
     [ 'be267e3e0f618636fe94cf5733f279defb9fd0cf68c64aed037bda24c5aa7e94' ] },
  { channelname: 'mychannel',
    blocknum: 5,
    txcount: 1,
    datahash:
     '17f646565653fd73f25c76bae6dd4cd95fb948e9e953cae63aeb0716796b5c82',
    blockhash:
     'f2af0145d8c13c6747d9e9e6abc6e7f90217b0ca3d10d52dec36d5a59184ad23',
    prehash:
     'f07a9f0d6877296e193b50070c6a0d81e44c135bc088299d9e3407f022f15bd6',
    createdt: 2020-09-24T01:36:13.963Z,
    blksize: 4,
    txhash:
     [ '38520878cd35604767de721cee2547aabb0eb0e510c0ff20e48c323bd791445a' ] } ]
[2020-09-23T19:14:33.593] [INFO] Platform - getClient (id:kafka_default)
[2020-09-23T19:14:33.597] [DEBUG] Proxy - getChannelsInfo >> [{"id":3,"channelname":"mychannel","blocks":7,"channel_genesis_hash":"c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8","transactions":7,"createdat":"2020-09-18T06:51:21.000Z","channel_hash":""}]
[2020-09-23T19:14:33.599] [DEBUG] MetricService -  item ------------>  { chaincodename: 'mycc',
  channelname: 'mychannel',
  version: '1.0',
  channel_genesis_hash:
   'c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8',
  path:
   'github.com/hyperledger/fabric/chaincode/chaincode_example02',
  c: 5 }
[2020-09-23T19:14:33.612] [DEBUG] CRUDService - getTxList.byOrgs  false
[2020-09-23T19:14:33.613] [INFO] Platform - getClient (id:kafka_default)
[2020-09-23T19:14:33.614] [INFO] Platform - getClient (id:kafka_default)
[2020-09-23T19:14:33.641] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T19:14:33.789] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-23T19:14:33.973] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T19:14:33.976] [DEBUG] Proxy - getPeersStatus >> 4
[2020-09-23T19:14:33.981] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-23T19:14:33.982] [DEBUG] Proxy - getPeersStatus >> 4
[2020-09-23T19:15:00.603] [INFO] main - Received kill signal, shutting down gracefully
[2020-09-23T19:15:00.611] [INFO] Sync - <<<<<<<<<<<<<<<<<<<<<<<<<< Closing client processor >>>>>>>>>>>>>>>>>>>>>
[2020-09-23T19:15:00.614] [DEBUG] FabricEvent - disconnectEventHubs()
[2020-09-23T19:15:00.614] [DEBUG] FabricEvent - disconnectChannelEventHub(mychannel)
[2020-09-23T19:15:01.442] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-23T19:15:01.455] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-23T19:15:01.455] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-23T19:15:01.490] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-23T19:15:01.490] [INFO] FabricUtils - generateBlockHash 0
[2020-09-23T19:15:01.491] [ERROR] Sync - <<<<<<<<<<<<<<<<<<<<<<<<<< Synchronizer Error >>>>>>>>>>>>>>>>>>>>>
[2020-09-23T19:15:01.492] [ERROR] Sync - Error: Client was closed and is not queryable
    at process.nextTick (/home/cups/Desktop/blockchain-explorer/node_modules/pg/lib/client.js:535:25)
    at process._tickCallback (internal/process/next_tick.js:61:11)
[2020-09-23T19:15:01.492] [INFO] Sync - <<<<<<<<<<<<<<<<<<<<<<<<<< Closing client processor >>>>>>>>>>>>>>>>>>>>>
[2020-09-23T19:15:01.492] [DEBUG] FabricEvent - disconnectEventHubs()
[2020-09-23T19:15:01.497] [DEBUG] SyncServices - New Block  >>>>>>> {"low":1,"high":0,"unsigned":true}
[2020-09-23T19:15:01.497] [INFO] FabricUtils - generateBlockHash 1
[2020-09-23T19:15:01.498] [INFO] FabricEvent - Successfully created channel event hub for [mychannel]
[2020-09-23T19:15:01.499] [DEBUG] SyncServices - New Block  >>>>>>> {"low":2,"high":0,"unsigned":true}
[2020-09-23T19:15:01.499] [INFO] FabricUtils - generateBlockHash 2
[2020-09-23T19:15:01.501] [DEBUG] SyncServices - New Block  >>>>>>> {"low":3,"high":0,"unsigned":true}
[2020-09-23T19:15:01.501] [INFO] FabricUtils - generateBlockHash 3
[2020-09-23T19:15:01.502] [DEBUG] SyncServices - New Block  >>>>>>> {"low":4,"high":0,"unsigned":true}
[2020-09-23T19:15:01.502] [INFO] FabricUtils - generateBlockHash 4
[2020-09-23T19:15:01.506] [DEBUG] SyncServices - New Block  >>>>>>> {"low":5,"high":0,"unsigned":true}
[2020-09-23T19:15:01.506] [INFO] FabricUtils - generateBlockHash 5
[2020-09-23T19:15:01.507] [DEBUG] SyncServices - New Block  >>>>>>> {"low":6,"high":0,"unsigned":true}
[2020-09-23T19:15:01.507] [INFO] FabricUtils - generateBlockHash 6
[2020-09-24T10:15:09.746] [DEBUG] main - false 'ssl-certs' '/home/cups/Desktop/blockchain-explorer/ssl-certs'
[2020-09-24T10:15:10.550] [DEBUG] Platform - ******* Initialization started for hyperledger fabric platform ******
[2020-09-24T10:15:10.550] [DEBUG] Platform - ******* Initialization started for hyperledger fabric platform ******, { kafka_default:
   { name: 'kafka_default',
     profile: './connection-profile/connection.json' } }
[2020-09-24T10:15:10.551] [DEBUG] Platform - Setting admin organization enrolment files
[2020-09-24T10:15:10.551] [INFO] Platform -  network_config.id  kafka_default  network_config.profile  ./connection-profile/connection.json
[2020-09-24T10:15:10.551] [DEBUG] Platform - Creating network client [kafka_default] >>  { name: 'kafka_default',
  profile: './connection-profile/connection.json' }
[2020-09-24T10:15:10.551] [DEBUG] User - User : cups
[2020-09-24T10:15:10.590] [INFO] Platform - Already registered : admin
[2020-09-24T10:15:10.590] [DEBUG] FabricUtils - ************ Initializing fabric client for [kafka_default]************
[2020-09-24T10:15:10.590] [DEBUG] FabricClient - Client configuration [kafka_default]  ...
[2020-09-24T10:15:10.591] [INFO] FabricConfig - config.client.tlsEnable  true
[2020-09-24T10:15:10.591] [DEBUG] FabricGateway - LOADING CONFIGURATION  [OBJECT OBJECT]
[2020-09-24T10:15:10.591] [INFO] FabricConfig - FabricConfig, this.config.channels  mychannel
[2020-09-24T10:15:10.594] [DEBUG] FabricGateway - An identity for the admin user: cups already exists in the wallet
[2020-09-24T10:15:10.876] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-24T10:15:10.876] [DEBUG] FabricClient - Client channels >> [{"channel_id":"mychannel"}]
[2020-09-24T10:15:10.876] [DEBUG] FabricClient - Initializing channel  mychannel
[2020-09-24T10:15:10.895] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-24T10:15:10.896] [DEBUG] FabricClient - Genesis Block for client [kafka_default]
[2020-09-24T10:15:10.896] [INFO] FabricUtils - generateBlockHash 0
[2020-09-24T10:15:10.898] [DEBUG] FabricClient - Channel genesis hash for channel [mychannel] >> c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8
[2020-09-24T10:15:10.898] [DEBUG] FabricClient - Initialized channel >> mychannel
[2020-09-24T10:15:10.900] [INFO] Platform - initializeListener, network_id, network_client  kafka_default { name: 'kafka',
  version: '1.0.0',
  client:
   { tlsEnable: true,
     adminCredential: { id: 'cups', password: '123456789' },
     enableAuthentication: true,
     organization: 'Org1MSP',
     connection: { timeout: [Object] } },
  channels: { mychannel: { peers: [Object], connection: [Object] } },
  organizations:
   { Org1MSP:
      { mspid: 'Org1MSP',
        adminPrivateKey: [Object],
        peers: [Array],
        signedCert: [Object] } },
  peers:
   { 'peer0.org1.example.com':
      { tlsCACerts: [Object],
        url: 'grpcs://peer0.org1.example.com:7051' } } }
[2020-09-24T10:15:10.909] [INFO] main - Please open web browser to access ï¼šhttp://localhost:8080/
[2020-09-24T10:15:10.909] [INFO] main - pid is 10571
[2020-09-24T10:15:11.036] [DEBUG] Sync - Start synchronizer
[2020-09-24T10:15:11.157] [DEBUG] Synchronizer -  Synchronizer initialized
[2020-09-24T10:15:11.781] [INFO] Synchronizer - initialize : 60
[2020-09-24T10:15:11.781] [DEBUG] SyncPlatform - ******* Initialization started for child client process ****** [ 'kafka_default', 'kafka_default', '1' ]
[2020-09-24T10:15:11.781] [INFO] SyncPlatform - Sync process is started for the network : [kafka_default] and client : [kafka_default]
[2020-09-24T10:15:11.782] [DEBUG] SyncPlatform - Blocks synch interval time >> 60000
[2020-09-24T10:15:11.784] [DEBUG] FabricUtils - ************ Initializing fabric client for [kafka_default]************
[2020-09-24T10:15:11.784] [DEBUG] FabricClient - Client configuration [kafka_default]  ...
[2020-09-24T10:15:11.785] [INFO] FabricConfig - config.client.tlsEnable  true
[2020-09-24T10:15:11.785] [DEBUG] FabricGateway - LOADING CONFIGURATION  [OBJECT OBJECT]
[2020-09-24T10:15:11.785] [INFO] FabricConfig - FabricConfig, this.config.channels  mychannel
[2020-09-24T10:15:11.816] [DEBUG] FabricGateway - An identity for the admin user: cups already exists in the wallet
[2020-09-24T10:15:12.111] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-24T10:15:12.111] [DEBUG] FabricClient - Client channels >> [{"channel_id":"mychannel"}]
[2020-09-24T10:15:12.111] [DEBUG] FabricClient - Initializing channel  mychannel
[2020-09-24T10:15:12.127] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-24T10:15:12.128] [DEBUG] FabricClient - Genesis Block for client [kafka_default]
[2020-09-24T10:15:12.128] [INFO] FabricUtils - generateBlockHash 0
[2020-09-24T10:15:12.130] [DEBUG] FabricClient - Channel genesis hash for channel [mychannel] >> c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8
[2020-09-24T10:15:12.130] [DEBUG] FabricClient - Initialized channel >> mychannel
[2020-09-24T10:15:12.138] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-24T10:15:12.140] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-24T10:15:12.161] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-24T10:15:12.162] [INFO] FabricUtils - generateBlockHash 0
[2020-09-24T10:15:12.171] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-24T10:15:12.284] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-24T10:15:12.286] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-24T10:15:12.286] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-24T10:15:12.287] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-24T10:15:12.288] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-24T10:15:12.294] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-24T10:15:12.302] [DEBUG] SyncPlatform - ******* Initialization end for child client process kafka_default ******
[2020-09-24T10:15:12.302] [INFO] Sync - Synchronizer pid is 10586
[2020-09-24T10:15:12.336] [DEBUG] SyncServices - New Block  >>>>>>> {"low":1,"high":0,"unsigned":true}
[2020-09-24T10:15:12.337] [INFO] FabricUtils - generateBlockHash 1
[2020-09-24T10:15:12.338] [INFO] FabricEvent - Successfully created channel event hub for [mychannel]
[2020-09-24T10:15:12.341] [DEBUG] SyncServices - saveTransaction  false
[2020-09-24T10:15:12.341] [INFO] SyncServices - block_row.blocknum  1
[2020-09-24T10:15:12.342] [DEBUG] SyncServices - status  false
[2020-09-24T10:15:12.342] [DEBUG] SyncServices - New Block  >>>>>>> {"low":2,"high":0,"unsigned":true}
[2020-09-24T10:15:12.342] [INFO] FabricUtils - generateBlockHash 2
[2020-09-24T10:15:12.343] [DEBUG] SyncServices - saveTransaction  false
[2020-09-24T10:15:12.343] [INFO] SyncServices - block_row.blocknum  2
[2020-09-24T10:15:12.343] [DEBUG] SyncServices - status  false
[2020-09-24T10:15:12.343] [DEBUG] SyncServices - New Block  >>>>>>> {"low":3,"high":0,"unsigned":true}
[2020-09-24T10:15:12.343] [INFO] FabricUtils - generateBlockHash 3
[2020-09-24T10:15:12.350] [DEBUG] SyncServices - saveTransaction  false
[2020-09-24T10:15:12.350] [INFO] SyncServices - block_row.blocknum  3
[2020-09-24T10:15:12.355] [DEBUG] SyncServices - status  false
[2020-09-24T10:15:12.355] [DEBUG] SyncServices - New Block  >>>>>>> {"low":4,"high":0,"unsigned":true}
[2020-09-24T10:15:12.355] [INFO] FabricUtils - generateBlockHash 4
[2020-09-24T10:15:12.359] [DEBUG] SyncServices - saveTransaction  false
[2020-09-24T10:15:12.359] [INFO] SyncServices - block_row.blocknum  4
[2020-09-24T10:15:12.360] [DEBUG] SyncServices - status  false
[2020-09-24T10:15:12.360] [DEBUG] SyncServices - New Block  >>>>>>> {"low":5,"high":0,"unsigned":true}
[2020-09-24T10:15:12.360] [INFO] FabricUtils - generateBlockHash 5
[2020-09-24T10:15:12.361] [DEBUG] SyncServices - saveTransaction  false
[2020-09-24T10:15:12.361] [INFO] SyncServices - block_row.blocknum  5
[2020-09-24T10:15:12.363] [DEBUG] SyncServices - status  false
[2020-09-24T10:15:12.363] [DEBUG] SyncServices - New Block  >>>>>>> {"low":6,"high":0,"unsigned":true}
[2020-09-24T10:15:12.363] [INFO] FabricUtils - generateBlockHash 6
[2020-09-24T10:15:12.364] [DEBUG] SyncServices - saveTransaction  false
[2020-09-24T10:15:12.364] [INFO] SyncServices - block_row.blocknum  6
[2020-09-24T10:15:12.365] [DEBUG] SyncServices - status  false
[2020-09-24T10:15:17.641] [DEBUG] NetworkService - Network list  Map {
  'kafka_default' => { name: 'kafka_default',
    instance:
     FabricClient {
       network_id: 'kafka_default',
       fabricGateway: [FabricGateway],
       channelsGenHash: [Map],
       config: [FabricConfig],
       status: true,
       channels: [Array] } } }
[2020-09-24T10:15:17.642] [DEBUG] NetworkService - Network list  kafka_default
[2020-09-24T10:15:17.642] [DEBUG] NetworkService - Network list  [ { id: 'kafka_default', name: 'kafka_default', authEnabled: true } ]
[2020-09-24T10:15:17.642] [DEBUG] Proxy - networkList >> [object Object]
[2020-09-24T10:15:17.701] [DEBUG] Proxy - getCurrentChannel: network_id kafka_default
[2020-09-24T10:15:17.701] [INFO] Platform - getClient (id:kafka_default)
[2020-09-24T10:15:17.708] [DEBUG] Proxy - getCurrentChannel >> {"currentChannel":"c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8"}
[2020-09-24T10:15:17.824] [DEBUG] CRUDService - getBlockAndTxList.byOrgs  false
[2020-09-24T10:15:17.824] [DEBUG] CRUDService - sqlBlockTxList  select a.* from  (
      select (select c.name from channel c where c.channel_genesis_hash =
         'c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8' and c.network_name = 'kafka_default') as channelname, blocks.blocknum,blocks.txcount ,blocks.datahash ,blocks.blockhash ,blocks.prehash,blocks.createdt, blocks.blksize, (
        SELECT  array_agg(txhash) as txhash FROM transactions where blockid = blocks.blocknum and
         channel_genesis_hash = 'c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8' and network_name = 'kafka_default' and createdt between '2020-09-23T02:15:17.824Z' and '2020-09-24T02:15:17.824Z') from blocks where
         blocks.channel_genesis_hash ='c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8' and blocks.network_name = 'kafka_default' and blocknum >= 0 and blocks.createdt between '2020-09-23T02:15:17.824Z' and '2020-09-24T02:15:17.824Z'
									order by blocks.blocknum desc)  a where  a.txhash IS NOT NULL
[2020-09-24T10:15:17.825] [DEBUG] CRUDService - Finished sqlBlockTxList  Promise { <pending> }
[2020-09-24T10:15:17.828] [DEBUG] dbroutes - Return getBlockAndTxList  [ { channelname: 'mychannel',
    blocknum: 6,
    txcount: 1,
    datahash:
     '069b19d677a4f9141be9a77dfd335ec50e733a0b27dc281e8c8b93b94236597e',
    blockhash:
     '703547b39af309ef2690c01ba125894d5dcb745b9e8ebfd0d9e913f6c36aa3fc',
    prehash:
     'f2af0145d8c13c6747d9e9e6abc6e7f90217b0ca3d10d52dec36d5a59184ad23',
    createdt: 2020-09-23T10:36:17.383Z,
    blksize: 4,
    txhash:
     [ 'be267e3e0f618636fe94cf5733f279defb9fd0cf68c64aed037bda24c5aa7e94' ] },
  { channelname: 'mychannel',
    blocknum: 5,
    txcount: 1,
    datahash:
     '17f646565653fd73f25c76bae6dd4cd95fb948e9e953cae63aeb0716796b5c82',
    blockhash:
     'f2af0145d8c13c6747d9e9e6abc6e7f90217b0ca3d10d52dec36d5a59184ad23',
    prehash:
     'f07a9f0d6877296e193b50070c6a0d81e44c135bc088299d9e3407f022f15bd6',
    createdt: 2020-09-23T10:36:13.963Z,
    blksize: 4,
    txhash:
     [ '38520878cd35604767de721cee2547aabb0eb0e510c0ff20e48c323bd791445a' ] } ]
[2020-09-24T10:15:17.865] [INFO] Platform - getClient (id:kafka_default)
[2020-09-24T10:15:17.890] [INFO] Platform - getClient (id:kafka_default)
[2020-09-24T10:15:17.906] [DEBUG] MetricService -  item ------------>  { chaincodename: 'mycc',
  channelname: 'mychannel',
  version: '1.0',
  channel_genesis_hash:
   'c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8',
  path:
   'github.com/hyperledger/fabric/chaincode/chaincode_example02',
  c: 5 }
[2020-09-24T10:15:17.908] [INFO] Platform - getClient (id:kafka_default)
[2020-09-24T10:15:17.917] [DEBUG] Proxy - getChannels >> ["mychannel"]
[2020-09-24T10:15:17.919] [INFO] Platform - getClient (id:kafka_default)
[2020-09-24T10:15:17.924] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-24T10:15:18.148] [DEBUG] Proxy - getChannelsInfo >> [{"id":3,"channelname":"mychannel","blocks":7,"channel_genesis_hash":"c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8","transactions":7,"createdat":"2020-09-17T15:51:21.000Z","channel_hash":""}]
[2020-09-24T10:15:18.152] [DEBUG] CRUDService - getTxList.byOrgs  false
[2020-09-24T10:15:18.153] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-24T10:15:18.339] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-24T10:15:18.340] [DEBUG] Proxy - getPeersStatus >> 4
[2020-09-24T10:15:18.352] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-24T10:15:18.352] [DEBUG] Proxy - getPeersStatus >> 4
[2020-09-24T10:15:22.340] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-24T10:15:22.443] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-24T10:15:22.444] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-24T10:15:22.445] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-24T10:15:22.445] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-24T10:15:22.446] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-24T10:15:22.455] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-24T10:15:22.461] [DEBUG] Proxy - Message from child {"notify_type":"3","network_id":"kafka_default","channel_name":"mychannel"}
[2020-09-24T10:15:22.461] [INFO] Platform - getClient (id:kafka_default)
[2020-09-24T10:15:22.461] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-24T10:15:22.582] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-24T10:15:42.301] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-24T10:15:42.308] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-24T10:15:42.309] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-24T10:15:42.334] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-24T10:15:42.334] [INFO] FabricUtils - generateBlockHash 0
[2020-09-24T10:15:42.335] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-24T10:15:42.527] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-24T10:15:42.548] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-24T10:15:42.555] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-24T10:15:42.558] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-24T10:15:42.563] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-24T10:15:42.581] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-24T10:16:12.301] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-24T10:16:12.311] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-24T10:16:12.311] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-24T10:16:12.323] [DEBUG] FabricGateway - queryChainInfo BlockchainInfo {
  height: Long { low: 7, high: 0, unsigned: true },
  currentBlockHash:
   <Buffer 70 35 47 b3 9a f3 09 ef 26 90 c0 1b a1 25 89 4d 5d cb 74 5b 9e 8e bf d0 d9 e9 13 f6 c3 6a a3 fc>,
  previousBlockHash:
   <Buffer f2 af 01 45 d8 c1 3c 67 47 d9 e9 e6 ab c6 e7 f9 02 17 b0 ca 3d 10 d5 2d ec 36 d5 a5 91 84 ad 23> }
[2020-09-24T10:16:12.333] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-24T10:16:12.334] [INFO] FabricUtils - generateBlockHash 0
[2020-09-24T10:16:12.336] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-24T10:16:12.457] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-24T10:16:12.458] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-24T10:16:12.459] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-24T10:16:12.460] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-24T10:16:12.460] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-24T10:16:12.475] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-24T10:16:18.598] [DEBUG] CRUDService - getBlockAndTxList.byOrgs  false
[2020-09-24T10:16:18.598] [DEBUG] CRUDService - sqlBlockTxList  select a.* from  (
      select (select c.name from channel c where c.channel_genesis_hash =
         'c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8' and c.network_name = 'kafka_default') as channelname, blocks.blocknum,blocks.txcount ,blocks.datahash ,blocks.blockhash ,blocks.prehash,blocks.createdt, blocks.blksize, (
        SELECT  array_agg(txhash) as txhash FROM transactions where blockid = blocks.blocknum and
         channel_genesis_hash = 'c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8' and network_name = 'kafka_default' and createdt between '2020-09-23T02:16:18.598Z' and '2020-09-24T02:16:18.598Z') from blocks where
         blocks.channel_genesis_hash ='c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8' and blocks.network_name = 'kafka_default' and blocknum >= 0 and blocks.createdt between '2020-09-23T02:16:18.598Z' and '2020-09-24T02:16:18.598Z'
									order by blocks.blocknum desc)  a where  a.txhash IS NOT NULL
[2020-09-24T10:16:18.599] [DEBUG] CRUDService - Finished sqlBlockTxList  Promise { <pending> }
[2020-09-24T10:16:18.599] [DEBUG] dbroutes - Return getBlockAndTxList  [ { channelname: 'mychannel',
    blocknum: 6,
    txcount: 1,
    datahash:
     '069b19d677a4f9141be9a77dfd335ec50e733a0b27dc281e8c8b93b94236597e',
    blockhash:
     '703547b39af309ef2690c01ba125894d5dcb745b9e8ebfd0d9e913f6c36aa3fc',
    prehash:
     'f2af0145d8c13c6747d9e9e6abc6e7f90217b0ca3d10d52dec36d5a59184ad23',
    createdt: 2020-09-23T10:36:17.383Z,
    blksize: 4,
    txhash:
     [ 'be267e3e0f618636fe94cf5733f279defb9fd0cf68c64aed037bda24c5aa7e94' ] },
  { channelname: 'mychannel',
    blocknum: 5,
    txcount: 1,
    datahash:
     '17f646565653fd73f25c76bae6dd4cd95fb948e9e953cae63aeb0716796b5c82',
    blockhash:
     'f2af0145d8c13c6747d9e9e6abc6e7f90217b0ca3d10d52dec36d5a59184ad23',
    prehash:
     'f07a9f0d6877296e193b50070c6a0d81e44c135bc088299d9e3407f022f15bd6',
    createdt: 2020-09-23T10:36:13.963Z,
    blksize: 4,
    txhash:
     [ '38520878cd35604767de721cee2547aabb0eb0e510c0ff20e48c323bd791445a' ] } ]
[2020-09-24T10:16:18.610] [INFO] Platform - getClient (id:kafka_default)
[2020-09-24T10:16:18.615] [INFO] Platform - getClient (id:kafka_default)
[2020-09-24T10:16:18.617] [INFO] Platform - getClient (id:kafka_default)
[2020-09-24T10:16:18.619] [DEBUG] Proxy - getChannelsInfo >> [{"id":3,"channelname":"mychannel","blocks":7,"channel_genesis_hash":"c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8","transactions":7,"createdat":"2020-09-17T15:51:21.000Z","channel_hash":""}]
[2020-09-24T10:16:18.629] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-24T10:16:18.899] [DEBUG] CRUDService - getTxList.byOrgs  false
[2020-09-24T10:16:18.902] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-24T10:16:19.127] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-24T10:16:19.129] [DEBUG] Proxy - getPeersStatus >> 4
[2020-09-24T10:16:19.134] [DEBUG] MetricService -  item ------------>  { chaincodename: 'mycc',
  channelname: 'mychannel',
  version: '1.0',
  channel_genesis_hash:
   'c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8',
  path:
   'github.com/hyperledger/fabric/chaincode/chaincode_example02',
  c: 5 }
[2020-09-24T10:16:19.137] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-24T10:16:19.140] [DEBUG] Proxy - getPeersStatus >> 4
[2020-09-24T10:16:42.302] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-24T10:16:42.339] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-24T10:16:42.340] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-24T10:16:42.351] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-24T10:16:42.356] [INFO] FabricUtils - generateBlockHash 0
[2020-09-24T10:16:42.358] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-24T10:16:42.518] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-24T10:16:42.519] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-24T10:16:42.520] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-24T10:16:42.521] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-24T10:16:42.521] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-24T10:16:42.527] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-24T10:16:47.689] [DEBUG] NetworkService - Network list  Map {
  'kafka_default' => { name: 'kafka_default',
    instance:
     FabricClient {
       network_id: 'kafka_default',
       fabricGateway: [FabricGateway],
       channelsGenHash: [Map],
       config: [FabricConfig],
       status: true,
       channels: [Array] } } }
[2020-09-24T10:16:47.689] [DEBUG] NetworkService - Network list  kafka_default
[2020-09-24T10:16:47.689] [DEBUG] NetworkService - Network list  [ { id: 'kafka_default', name: 'kafka_default', authEnabled: true } ]
[2020-09-24T10:16:47.690] [DEBUG] Proxy - networkList >> [object Object]
[2020-09-24T10:16:47.745] [DEBUG] Proxy - getCurrentChannel: network_id kafka_default
[2020-09-24T10:16:47.745] [INFO] Platform - getClient (id:kafka_default)
[2020-09-24T10:16:47.745] [DEBUG] Proxy - getCurrentChannel >> {"currentChannel":"c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8"}
[2020-09-24T10:16:47.846] [DEBUG] CRUDService - getBlockAndTxList.byOrgs  false
[2020-09-24T10:16:47.846] [DEBUG] CRUDService - sqlBlockTxList  select a.* from  (
      select (select c.name from channel c where c.channel_genesis_hash =
         'c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8' and c.network_name = 'kafka_default') as channelname, blocks.blocknum,blocks.txcount ,blocks.datahash ,blocks.blockhash ,blocks.prehash,blocks.createdt, blocks.blksize, (
        SELECT  array_agg(txhash) as txhash FROM transactions where blockid = blocks.blocknum and
         channel_genesis_hash = 'c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8' and network_name = 'kafka_default' and createdt between '2020-09-23T02:16:47.846Z' and '2020-09-24T02:16:47.846Z') from blocks where
         blocks.channel_genesis_hash ='c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8' and blocks.network_name = 'kafka_default' and blocknum >= 0 and blocks.createdt between '2020-09-23T02:16:47.846Z' and '2020-09-24T02:16:47.846Z'
									order by blocks.blocknum desc)  a where  a.txhash IS NOT NULL
[2020-09-24T10:16:47.848] [DEBUG] CRUDService - Finished sqlBlockTxList  Promise { <pending> }
[2020-09-24T10:16:47.850] [DEBUG] dbroutes - Return getBlockAndTxList  [ { channelname: 'mychannel',
    blocknum: 6,
    txcount: 1,
    datahash:
     '069b19d677a4f9141be9a77dfd335ec50e733a0b27dc281e8c8b93b94236597e',
    blockhash:
     '703547b39af309ef2690c01ba125894d5dcb745b9e8ebfd0d9e913f6c36aa3fc',
    prehash:
     'f2af0145d8c13c6747d9e9e6abc6e7f90217b0ca3d10d52dec36d5a59184ad23',
    createdt: 2020-09-23T10:36:17.383Z,
    blksize: 4,
    txhash:
     [ 'be267e3e0f618636fe94cf5733f279defb9fd0cf68c64aed037bda24c5aa7e94' ] },
  { channelname: 'mychannel',
    blocknum: 5,
    txcount: 1,
    datahash:
     '17f646565653fd73f25c76bae6dd4cd95fb948e9e953cae63aeb0716796b5c82',
    blockhash:
     'f2af0145d8c13c6747d9e9e6abc6e7f90217b0ca3d10d52dec36d5a59184ad23',
    prehash:
     'f07a9f0d6877296e193b50070c6a0d81e44c135bc088299d9e3407f022f15bd6',
    createdt: 2020-09-23T10:36:13.963Z,
    blksize: 4,
    txhash:
     [ '38520878cd35604767de721cee2547aabb0eb0e510c0ff20e48c323bd791445a' ] } ]
[2020-09-24T10:16:47.880] [DEBUG] MetricService -  item ------------>  { chaincodename: 'mycc',
  channelname: 'mychannel',
  version: '1.0',
  channel_genesis_hash:
   'c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8',
  path:
   'github.com/hyperledger/fabric/chaincode/chaincode_example02',
  c: 5 }
[2020-09-24T10:16:47.883] [INFO] Platform - getClient (id:kafka_default)
[2020-09-24T10:16:47.889] [INFO] Platform - getClient (id:kafka_default)
[2020-09-24T10:16:47.900] [DEBUG] Proxy - getChannels >> ["mychannel"]
[2020-09-24T10:16:47.903] [DEBUG] Proxy - getChannelsInfo >> [{"id":3,"channelname":"mychannel","blocks":7,"channel_genesis_hash":"c330500891bb31fd1221bfd29b10aa88540aaa28b95136a20c5436a71a19b4a8","transactions":7,"createdat":"2020-09-17T15:51:21.000Z","channel_hash":""}]
[2020-09-24T10:16:47.914] [INFO] Platform - getClient (id:kafka_default)
[2020-09-24T10:16:47.923] [INFO] Platform - getClient (id:kafka_default)
[2020-09-24T10:16:47.930] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-24T10:16:48.163] [DEBUG] CRUDService - getTxList.byOrgs  false
[2020-09-24T10:16:48.166] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-24T10:16:48.444] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-24T10:16:48.448] [DEBUG] Proxy - getPeersStatus >> 4
[2020-09-24T10:16:48.451] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-24T10:16:48.452] [DEBUG] Proxy - getPeersStatus >> 4
[2020-09-24T10:17:12.303] [INFO] SyncPlatform - Updating the client network and other details to DB
[2020-09-24T10:17:12.316] [DEBUG] FabricGateway - queryChannels ChannelQueryResponse { channels: [ ChannelInfo { channel_id: 'mychannel' } ] }
[2020-09-24T10:17:12.316] [INFO] SyncServices - SyncServices.synchNetworkConfigToDB client  kafka_default  channel_name  mychannel
[2020-09-24T10:17:12.328] [DEBUG] FabricGateway - queryChainInfo BlockchainInfo {
  height: Long { low: 7, high: 0, unsigned: true },
  currentBlockHash:
   <Buffer 70 35 47 b3 9a f3 09 ef 26 90 c0 1b a1 25 89 4d 5d cb 74 5b 9e 8e bf d0 d9 e9 13 f6 c3 6a a3 fc>,
  previousBlockHash:
   <Buffer f2 af 01 45 d8 c1 3c 67 47 d9 e9 e6 ab c6 e7 f9 02 17 b0 ca 3d 10 d5 2d ec 36 d5 a5 91 84 ad 23> }
[2020-09-24T10:17:12.337] [DEBUG] FabricGateway - queryBlock { header:
   { number: Long { low: 0, high: 0, unsigned: true },
     previous_hash: <Buffer >,
     data_hash:
      <Buffer 54 b3 60 4d ca 13 52 a5 63 56 a7 f5 45 c8 f7 a3 b5 bd 64 3f 66 5a 08 5c a9 41 8f ff a6 5b 62 6e> },
  data: { data: [ [Object] ] },
  metadata: { metadata: [ [Object], {}, [Array], {}, undefined ] } }
[2020-09-24T10:17:12.338] [INFO] FabricUtils - generateBlockHash 0
[2020-09-24T10:17:12.339] [DEBUG] FabricClient - initializeChannelFromDiscover  mychannel
[2020-09-24T10:17:12.556] [INFO] FabricClient - Discovered Org1MSP [ { mspid: 'Org1MSP',
    endpoint: 'peer0.org1.example.com:7051',
    name: 'peer0.org1.example.com:7051',
    ledgerHeight: Long { low: 7, high: 0, unsigned: true },
    chaincodes: [ [Object] ] } ]
[2020-09-24T10:17:12.557] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer0.example.com:7050
[2020-09-24T10:17:12.558] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer1.example.com:7050
[2020-09-24T10:17:12.559] [DEBUG] SyncServices - insertNewOrderers discoveryProtocol  grpcs  requesturl  grpcs://orderer2.example.com:7050
[2020-09-24T10:17:12.559] [INFO] FabricGateway - queryInstantiatedChaincodes mychannel
[2020-09-24T10:17:12.569] [DEBUG] FabricGateway - queryInstantiatedChaincodes ChaincodeQueryResponse {
  chaincodes:
   [ ChaincodeInfo {
       name: 'mycc',
       version: '1.0',
       path:
        'github.com/hyperledger/fabric/chaincode/chaincode_example02',
       escc: 'escc',
       vscc: 'vscc' } ] }
[2020-09-24T10:17:20.880] [INFO] main - Received kill signal, shutting down gracefully
[2020-09-24T10:17:20.883] [INFO] Sync - <<<<<<<<<<<<<<<<<<<<<<<<<< Closing client processor >>>>>>>>>>>>>>>>>>>>>
[2020-09-24T10:17:20.885] [DEBUG] FabricEvent - disconnectEventHubs()
[2020-09-24T10:17:20.885] [DEBUG] FabricEvent - disconnectChannelEventHub(mychannel)
